import{d as h,u as g,a as y,c as _,b as n,e,o as v,_ as M,C as k,V as w,f as C,N,M as P,L as D,g as $}from"./index-f870563c.js";const L={class:"min-h-screen"},S={class:"container mx-auto px-6 py-8 max-w-7xl"},E={class:"main-container p-8"},A={class:"grid grid-cols-1 lg:grid-cols-4 gap-6 mb-8"},I={class:"lg:col-span-3"},V={class:"control-card p-6"},B={class:"space-y-2"},O={class:"grid grid-cols-1 lg:grid-cols-3 gap-8"},R={class:"lg:col-span-2"},X={class:"flex flex-col gap-6"},j={class:"control-card p-6"},z={class:"space-y-3"},G=h({__name:"Playground",setup(Q){const r=g(),i=y();function c(s){let t=[];switch(s){case"spiral":t=u();break;case"clusters":t=m();break;case"xor":t=p();break}r.setDataPoints(t),i.addNotification({message:`${s.charAt(0).toUpperCase()+s.slice(1)} dataset loaded!`,type:"success"})}function u(){const s=[];for(let a=0;a<100;a++){const o=a/100*.8,l=1.75*a/100*2*Math.PI;s.push({x:o*Math.cos(l)+Math.random()*.1-.05,y:o*Math.sin(l)+Math.random()*.1-.05,label:0}),s.push({x:o*Math.cos(l+Math.PI)+Math.random()*.1-.05,y:o*Math.sin(l+Math.PI)+Math.random()*.1-.05,label:1})}return s}function m(){const s=[];return[{x:-.5,y:-.5,label:0},{x:.5,y:-.5,label:1},{x:0,y:.5,label:2}].forEach(a=>{for(let o=0;o<50;o++)s.push({x:a.x+(Math.random()-.5)*.4,y:a.y+(Math.random()-.5)*.4,label:a.label})}),s}function p(){const s=[];for(let t=0;t<100;t++){const a=Math.random()*2-1,o=Math.random()*2-1,l=a>0!=o>0?1:0;s.push({x:a,y:o,label:l})}return s}function d(s){switch(s){case"noise":f();break;case"shuffle":b();break;case"cluster":x();break}}function f(){const s=r.dataPoints.map(t=>({...t,x:t.x+(Math.random()-.5)*.2,y:t.y+(Math.random()-.5)*.2}));r.setDataPoints(s),i.addNotification({message:"Noise added to data points!",type:"info"})}function b(){const s=[...r.dataPoints];for(let t=s.length-1;t>0;t--){const a=Math.floor(Math.random()*(t+1)),o=s[t].label;s[t].label=s[a].label,s[a].label=o}r.setDataPoints(s),i.addNotification({message:"Labels shuffled randomly!",type:"warning"})}function x(){i.addNotification({message:"Auto-clustering not yet implemented!",type:"info"})}return(s,t)=>(v(),_("div",L,[n(M),e("main",S,[e("div",E,[t[8]||(t[8]=e("div",{class:"text-center mb-8"},[e("h1",{class:"text-4xl font-bold text-theme-primary mb-4"},"Neural Network Playground"),e("p",{class:"text-lg text-theme-secondary"},"Experiment freely with neural network configurations")],-1)),e("div",A,[e("div",I,[n(k)]),e("div",null,[e("div",V,[t[6]||(t[6]=e("h3",{class:"font-bold text-lg text-theme-primary mb-4"},"Quick Presets",-1)),e("div",B,[e("button",{onClick:t[0]||(t[0]=a=>c("spiral")),class:"modern-button px-4 py-2 text-sm w-full"}," Spiral Dataset "),e("button",{onClick:t[1]||(t[1]=a=>c("clusters")),class:"modern-button px-4 py-2 text-sm w-full"}," Clustered Data "),e("button",{onClick:t[2]||(t[2]=a=>c("xor")),class:"modern-button px-4 py-2 text-sm w-full"}," XOR Problem ")])])])]),n(w),n(C),e("div",O,[e("div",R,[n(N)]),e("div",X,[n(P),n(D),e("div",j,[t[7]||(t[7]=e("h3",{class:"font-bold text-lg text-theme-primary mb-4"},"Experiments",-1)),e("div",z,[e("button",{onClick:t[3]||(t[3]=a=>d("noise")),class:"modern-button px-4 py-2 text-sm w-full btn-warning"}," Add Noise "),e("button",{onClick:t[4]||(t[4]=a=>d("shuffle")),class:"modern-button px-4 py-2 text-sm w-full btn-warning"}," Shuffle Labels "),e("button",{onClick:t[5]||(t[5]=a=>d("cluster")),class:"modern-button px-4 py-2 text-sm w-full btn-success"}," Auto-cluster ")])])])])])])]))}});const U=$(G,[["__scopeId","data-v-cc8b6ba4"]]);export{U as default};
