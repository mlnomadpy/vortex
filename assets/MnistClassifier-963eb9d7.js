import{aG as De,r as f,c as K,aH as Ne,d as Ut,a3 as dt,ak as Yt,aI as oe,o as b,a as C,b as t,t as n,ac as Ft,ag as Vt,a6 as ae,R as At,g as B,S as lt,n as q,w as fe,al as Kt,_ as Et,P as bt,Q as wt,J as Wt,K as Ce,f as l,aw as _e,G as ye,a4 as Pe,F as Me,e as mt,N as ve,ap as be,O as de,X as Se,ad as ee,ai as we,ar as Fe,ay as We,az as Le,aa as Re,aB as Ue,U as Xt,aC as Ee,T as Te,aD as qe,ah as He}from"./index-5671bffa.js";import{F as jt}from"./FloatingPanel-9d899357.js";import{mnistApiService as Z}from"./mnistApiService-dcfd3c73.js";function ne(g,e,u){const s=g.weights;if(s.length!==e.length)throw new Error(`Dimension mismatch: neuron has ${s.length} weights, input has ${e.length} features`);switch(u){case"dotProduct":return Rt(s,e)+g.bias;case"euclidean":return-se(s,e)+g.bias;case"yatProduct":const a=Rt(s,e),r=se(s,e);return a/Math.sqrt(r*r+1e-8)+g.bias;case"cosine":return Ve(s,e)+g.bias;case"manhattan":return-Be(s,e)+g.bias;case"rbf":return Math.exp(-.1*se(s,e)**2)+g.bias;default:throw new Error(`Unknown similarity metric: ${u}`)}}function Rt(g,e){return g.reduce((u,s,a)=>u+s*e[a],0)}function se(g,e){return Math.sqrt(g.reduce((u,s,a)=>u+(s-e[a])**2,0))}function Ve(g,e){const u=Rt(g,e),s=Math.sqrt(Rt(g,g)),a=Math.sqrt(Rt(e,e));return s===0||a===0?0:u/(s*a)}function Be(g,e){return g.reduce((u,s,a)=>u+Math.abs(s-e[a]),0)}function ie(g,e){if(e==="none"||g.length===0)return[...g];switch(e){case"softmax":return Oe(g);case"softermax":const u=g.map(a=>1+a),s=u.reduce((a,r)=>a+r,0);return u.map(a=>a/s);case"sigmoid":return g.map(a=>1/(1+Math.exp(-a)));case"relu":return g.map(a=>Math.max(0,a));case"gelu":return g.map(a=>.5*a*(1+Math.tanh(Math.sqrt(2/Math.PI)*(a+.044715*Math.pow(a,3)))));default:throw new Error(`Unknown activation function: ${e}`)}}function Oe(g){const e=Math.max(...g),u=g.map(a=>Math.exp(a-e)),s=u.reduce((a,r)=>a+r,0);return u.map(a=>a/s)}function $e(g,e,u,s){if(e.length===0)return{winningNeuron:null,scores:[],probabilities:[],confidence:0};const a=e.map(E=>ne(E,g,u)),r=ie(a,s);let w=-1/0,M=null;r.forEach((E,T)=>{E>w&&(w=E,M=e[T])});const z=w/(r.reduce((E,T)=>E+T,0)||1);return{winningNeuron:M,scores:a,probabilities:r,confidence:z}}function xe(g,e,u,s){if(e.length===0||g.length===0)return 0;let a=0;const r=g.length;for(const w of g){const M=e.map(_=>ne(_,w.features,u));let z;s==="none"?z=ie(M,"softmax"):z=ie(M,s);const E=z.reduce((_,W)=>_+W,0);E>0?z=z.map(_=>Math.max(_/E,1e-8)):z=z.map(()=>1/z.length);const T=e.findIndex(_=>_.id===w.label);if(T!==-1){const _=Math.max(z[T],1e-8);a+=-Math.log(_)}else a+=-Math.log(1e-8)}return a/r}function ue(g,e,u,s){if(e.length===0||g.length===0)return 0;let a=0;for(const r of g){const w=$e(r.features,e,u,s);w.winningNeuron&&w.winningNeuron.id===r.label&&a++}return a/g.length}function Ge(g,e,u,s,a){if(e.length===0)return{weights:new Array(g.weights.length).fill(0),bias:0};const r=new Array(g.weights.length).fill(0);let w=0;const M=e.length;for(const z of e){const E=u.map(Q=>ne(Q,z.features,s));let T;a==="none"?T=ie(E,"softmax"):T=ie(E,a);const _=T.reduce((Q,X)=>Q+X,0);_>0&&(T=T.map(Q=>Q/_));const W=u.findIndex(Q=>Q.id===z.label),F=u.findIndex(Q=>Q.id===g.id);if(W!==-1&&F!==-1){const Q=W===F?1:0,O=T[F]-Q,A=Qe(g,z.features,s);for(let $=0;$<r.length;$++)r[$]+=O*A.weights[$];w+=O*A.bias}}return{weights:r.map(z=>z/M),bias:w/M}}function Qe(g,e,u){const s=g.weights;switch(u){case"dotProduct":return{weights:[...e],bias:1};case"euclidean":const a=s.map((A,$)=>A-e[$]),r=Math.sqrt(a.reduce((A,$)=>A+$*$,0));return r===0?{weights:new Array(s.length).fill(0),bias:1}:{weights:a.map(A=>A/r),bias:1};case"yatProduct":const w=Rt(s,e),M=se(s,e),z=Math.sqrt(M*M+1e-8),E=e,T=s.map((A,$)=>(A-e[$])/(M+1e-8));return{weights:s.map((A,$)=>(E[$]*z-w*T[$]*M/z)/(z*z)),bias:1};case"cosine":const _=Math.sqrt(Rt(s,s)),W=Math.sqrt(Rt(e,e));if(_===0||W===0)return{weights:new Array(s.length).fill(0),bias:1};const F=Rt(s,e);return{weights:s.map((A,$)=>(e[$]*_-A*F/_)/(_*W)),bias:1};case"manhattan":return{weights:s.map((A,$)=>A>e[$]?-1:A<e[$]?1:0),bias:1};case"rbf":const Q=.1,X=se(s,e),O=Math.exp(-Q*X*X);return{weights:s.map((A,$)=>-2*Q*(A-e[$])*O),bias:1};default:throw new Error(`Unknown similarity metric: ${u}`)}}function Je(g,e){const u=[];for(let s=0;s<g.length;s+=e){const a=g.slice(s,s+e);u.push({features:a.map(r=>r.features),labels:a.map(r=>r.label),batchSize:Math.min(e,g.length-s)})}return u}function Xe(g,e="xavier"){switch(e){case"random":return Array.from({length:g},()=>(Math.random()-.5)*.1);case"xavier":const u=Math.sqrt(6/g);return Array.from({length:g},()=>(Math.random()-.5)*2*u);case"he":const s=Math.sqrt(2/g);return Array.from({length:g},()=>s*Math.sqrt(-2*Math.log(Math.random()))*Math.cos(2*Math.PI*Math.random()));case"zeros":return new Array(g).fill(0);default:throw new Error(`Unknown initialization strategy: ${e}`)}}function je(g){const e=Math.max(...g),u=Math.min(...g),s=e-u;return s===0?g.map(()=>0):g.map(a=>(a-u)/s)}function Ke(g,e=28,u=28){if(g.length!==e*u)throw new Error(`Weight vector length ${g.length} doesn't match image dimensions ${e}x${u}`);const s=[];for(let a=0;a<u;a++){const r=[];for(let w=0;w<e;w++)r.push(g[a*e+w]);s.push(r)}return s}class Ye{dataset=null;isLoading=!1;async loadMNIST(e={train:1e3,test:200}){if(this.dataset&&this.dataset.trainImages.length>=e.train)return{trainImages:this.dataset.trainImages.slice(0,e.train),testImages:this.dataset.testImages.slice(0,e.test),imageShape:this.dataset.imageShape,numClasses:this.dataset.numClasses};if(this.isLoading)throw new Error("MNIST dataset is already loading");this.isLoading=!0;try{console.log("Generating high-quality MNIST-like dataset...");const u=await this.generateHighQualityMNIST(e);return this.dataset={trainImages:u.trainImages,testImages:u.testImages,imageShape:{width:28,height:28},numClasses:10},console.log(`MNIST dataset ready: ${this.dataset.trainImages.length} train, ${this.dataset.testImages.length} test samples`),this.dataset}catch(u){throw console.error("Failed to generate MNIST dataset:",u),u}finally{this.isLoading=!1}}async generateHighQualityMNIST(e){const u=await this.generateMNISTSamples(e.train,"train"),s=await this.generateMNISTSamples(e.test,"test");return{trainImages:u,testImages:s}}async generateMNISTSamples(e,u){const s=[],a=Math.ceil(e/10);console.log(u);for(let r=0;r<10;r++)for(let w=0;w<a&&s.length<e;w++){const M=this.generateRealisticDigit(r,w);s.push({features:je(M),label:r,originalLabel:r})}for(let r=s.length-1;r>0;r--){const w=Math.floor(Math.random()*(r+1));[s[r],s[w]]=[s[w],s[r]]}return s.slice(0,e)}generateRealisticDigit(e,u){const a=this.getDigitBasePattern(e,28);return this.applyRealisticTransformations(a,u,28)}getDigitBasePattern(e,u){const s=new Array(784).fill(0),a=(M,z,E)=>{if(M>=0&&M<u&&z>=0&&z<u){const T=Math.floor(z)*u+Math.floor(M);s[T]=Math.max(s[T],E)}},r=(M,z,E,T,_)=>{const W=Math.abs(E-M),F=Math.abs(T-z),Q=M<E?1:-1,X=z<T?1:-1;let O=W-F,A=M,$=z;for(;a(A,$,_),a(A+1,$,_*.7),a(A,$+1,_*.7),!(A===E&&$===T);){const k=2*O;k>-F&&(O-=F,A+=Q),k<W&&(O+=W,$+=X)}},w=(M,z,E,T,_=2)=>{for(let W=0;W<2*Math.PI;W+=.05)for(let F=E-_;F<=E+_;F++){const Q=M+F*Math.cos(W),X=z+F*Math.sin(W),O=Math.max(0,1-Math.abs(F-E)/_);a(Q,X,T*O)}};switch(e){case 0:w(14,14,9,.9,3);break;case 1:r(12,6,14,4,.8),r(14,4,14,22,.9),r(10,22,18,22,.8);break;case 2:r(6,8,20,8,.8),r(20,8,20,14,.8),r(20,14,6,22,.9),r(6,22,20,22,.8);break;case 3:r(6,6,18,6,.8),r(18,6,18,14,.8),r(10,14,18,14,.7),r(18,14,18,22,.8),r(6,22,18,22,.8);break;case 4:r(8,6,8,14,.9),r(8,14,20,14,.8),r(16,6,16,22,.9);break;case 5:r(6,6,18,6,.8),r(6,6,6,14,.8),r(6,14,16,14,.8),r(16,14,16,22,.8),r(6,22,16,22,.8);break;case 6:w(14,10,8,.8,2),w(14,17,6,.9,2),r(6,10,6,22,.8);break;case 7:r(6,6,20,6,.8),r(20,6,12,22,.9);break;case 8:w(14,10,6,.8,2),w(14,18,6,.8,2);break;case 9:w(14,11,6,.9,2),w(14,18,8,.8,2),r(20,11,20,22,.8);break}return s}applyRealisticTransformations(e,u,s){const a=[...e],r=.02+u%3*.01;for(let M=0;M<a.length;M++)a[M]>0&&(a[M]=Math.max(0,Math.min(1,a[M]+(Math.random()-.5)*r)));for(let M=0;M<5;M++){const z=Math.floor(Math.random()*a.length);a[z]=Math.min(.3,a[z]+Math.random()*.1)}const w=[...a];for(let M=1;M<s-1;M++)for(let z=1;z<s-1;z++){const E=M*s+z;if(a[E]>.1){const _=[a[(M-1)*s+z],a[(M+1)*s+z],a[M*s+(z-1)],a[M*s+(z+1)]].reduce((W,F)=>W+F,0)/4;w[E]=Math.min(1,a[E]+_*.1)}}return w}async getQuickSample(e=100){return this.generateMNISTSamples(e,"train")}getDatasetStats(){return this.dataset?{train:this.dataset.trainImages.length,test:this.dataset.testImages.length,features:this.dataset.trainImages[0]?.features.length||0,classes:this.dataset.numClasses}:null}sampleTrainBatch(e){if(!this.dataset)return[];const u=[...this.dataset.trainImages].sort(()=>Math.random()-.5);return u.slice(0,Math.min(e,u.length))}getTestData(){return this.dataset?.testImages||[]}getTrainData(){return this.dataset?.trainImages||[]}}const ke=new Ye;class Ze{listeners=[];on(e){this.listeners.push(e)}off(e){this.listeners=this.listeners.filter(u=>u!==e)}emit(){console.log("🎆 Emitting visualization update event to",this.listeners.length,"listeners"),this.listeners.forEach(e=>e())}}const Qt=new Ze,Bt=De("mnistClassifier",()=>{const g=f([]),e=f([]),u=f([]),s=f([]),a=f([0,1,2,3,4,5,6,7,8,9]),r=f([0,1,2,3,4,5,6,7,8,9]),w=f("dotProduct"),M=f("softmax"),z=f("weights"),E=f(null),T=f(!0),_=f(!1),W=f({trainSize:0,testSize:0,numFeatures:784,numClasses:10}),F=f({steps:[],isRunning:!1,currentStep:0,totalSteps:0,config:{learningRate:.01,epochs:100,batchSize:32,speed:1,regularization:{l1:0,l2:.001}}}),Q=f(0),X=f(0),O=f(0),A=f(0),$=f(null),k=f(!0),V=f(!0),st=f(.7),it=f(null),nt=K(()=>e.value.filter(v=>a.value.includes(v.label))),ft=K(()=>u.value.filter(v=>a.value.includes(v.label))),vt=K(()=>g.value.length===0||nt.value.length===0?0:T.value&&_.value?X.value:ue(nt.value,g.value,w.value,M.value)*100),kt=K(()=>g.value.length===0||ft.value.length===0?0:T.value&&_.value?O.value:ue(ft.value,g.value,w.value,M.value)*100),zt=K(()=>{const v=F.value.steps;return v.length===0?Dt(nt.value):v[v.length-1].loss}),$t=K(()=>F.value.isRunning),ht=f("mnist"),Ct=f({});function Dt(v){return xe(v,g.value,w.value,M.value)}async function ct(v){if(T.value&&_.value&&v.length>0)try{const{weights:I,biases:H}=Z.extractNetworkParams(g.value),{features:N,labels:J}=Z.extractBatchData(v);return(await Z.computeGradients(I,H,N,J,w.value,M.value)).loss}catch(I){console.warn("API loss computation failed, falling back to local:",I)}return xe(v,g.value,w.value,M.value)}async function gt(){try{console.log("🔌 Checking API connection..."),_.value=await Z.checkConnection(),_.value?(console.log("✅ API connected successfully!"),console.log(`🌐 API URL: ${Z.apiUrl}`),await Mt(),k.value&&at()):(console.warn("⚠️ API not available, falling back to local computation"),T.value=!1,await Mt())}catch(v){console.error("❌ Failed to connect to API:",v),_.value=!1,T.value=!1,await Mt()}}async function ot(v="xavier"){console.log("Initializing MNIST classifier with 10 neurons..."),await gt(),g.value=[];for(let I=0;I<10;I++){const H=Xe(W.value.numFeatures,v),N={id:I,weights:H,bias:0,color:Ne(I),label:`Digit ${I}`};g.value.push(N)}console.log(`Initialized ${g.value.length} neurons with ${v} strategy`),_.value?console.log("🚀 Using JAX API for high-performance computation"):console.log("⚠️ Using local computation"),E.value=g.value[0]}async function xt(v={train:1e3,test:200}){try{if(console.log(`Loading ${ht.value} dataset...`),!_.value){console.warn("API not connected, falling back to synthetic data");const c=await ke.loadMNIST(v);e.value=c.trainImages,u.value=c.testImages,W.value={trainSize:c.trainImages.length,testSize:c.testImages.length,numFeatures:c.trainImages[0]?.features.length||784,numClasses:c.numClasses},console.log("Synthetic dataset loaded successfully:",W.value),g.value.length===0&&await ot();return}console.log("Loading real dataset from API...");const I=await Z.loadDataset(ht.value,"train",v.train),H=await Z.loadDataset(ht.value,"test",v.test);console.log("Dataset metadata loaded:",{trainInfo:I,testInfo:H});const N=await Z.getDatasetSample(ht.value,"train",0,v.train),J=await Z.getDatasetSample(ht.value,"test",0,v.test);console.log("Dataset samples loaded:",{trainSamples:N.features.length,testSamples:J.features.length}),e.value=N.features.map((c,i)=>({features:c,label:N.labels[i],originalLabel:N.labels[i]})),u.value=J.features.map((c,i)=>({features:c,label:J.labels[i],originalLabel:J.labels[i]})),W.value={trainSize:e.value.length,testSize:u.value.length,numFeatures:I.feature_shape[1],numClasses:I.num_classes},r.value=Array.from({length:I.num_classes},(c,i)=>i),a.value=[...r.value],console.log("Real dataset loaded successfully:",W.value),console.log("Available classes:",I.class_names),g.value.length===0&&await ot()}catch(I){console.error("Failed to load dataset:",I),console.warn("Falling back to synthetic dataset generation...");try{const H=await ke.loadMNIST(v);e.value=H.trainImages,u.value=H.testImages,W.value={trainSize:H.trainImages.length,testSize:H.testImages.length,numFeatures:H.trainImages[0]?.features.length||784,numClasses:H.numClasses},console.log("Fallback synthetic dataset loaded:",W.value),g.value.length===0&&await ot()}catch(H){throw console.error("Even fallback dataset loading failed:",H),H}}}async function Mt(){try{_.value?(Ct.value=await Z.getAvailableDatasets(),console.log("Available datasets:",Ct.value)):Ct.value={synthetic_mnist:{classes:[0,1,2,3,4,5,6,7,8,9],class_names:["0","1","2","3","4","5","6","7","8","9"],description:"Synthetic MNIST-like dataset (local generation)"}}}catch(v){console.error("Failed to load available datasets:",v),Ct.value={}}}function Nt(v){ht.value=v,console.log(`Selected dataset changed to: ${v}`)}async function St(v=32){try{if(_.value&&e.value.length===0){const I=await Z.getTrainingBatch(ht.value,"train",v,a.value.length<r.value.length?a.value:void 0);return I.features.map((H,N)=>({features:H,label:I.labels[N],originalLabel:I.labels[N]}))}else{const I=nt.value;if(I.length===0)return[];const H=[];for(let N=0;N<v&&N<I.length;N++){const J=Math.floor(Math.random()*I.length);H.push(I[J])}return H}}catch(I){console.warn("Failed to get training batch from API, using local data:",I);const H=nt.value;if(H.length===0)return[];const N=[];for(let J=0;J<v&&J<H.length;J++){const c=Math.floor(Math.random()*H.length);N.push(H[c])}return N}}function x(v){a.value.includes(v)?a.value=a.value.filter(I=>I!==v):a.value=[...a.value,v]}async function L(v){if(T.value&&_.value)try{const{weights:H,biases:N}=Z.extractNetworkParams(g.value);return(await Z.forwardPass(H,N,v,w.value,M.value)).predicted_class}catch(H){console.warn("API prediction failed, falling back to local:",H)}return $e(v,g.value,w.value,M.value).winningNeuron?.id??null}function ut(v){return $e(v,g.value,w.value,M.value).winningNeuron?.id??null}async function Tt(){if(T.value&&_.value)try{const{weights:v,biases:I}=Z.extractNetworkParams(g.value);if(nt.value.length>0){const{features:H,labels:N}=Z.extractBatchData(nt.value),J=await Z.computeAccuracy(v,I,H,N,w.value,M.value);X.value=J*100}if(ft.value.length>0){const{features:H,labels:N}=Z.extractBatchData(ft.value),J=await Z.computeAccuracy(v,I,H,N,w.value,M.value);O.value=J*100}}catch(v){console.warn("Failed to update accuracy metrics via API:",v)}}async function D(){if(console.log("🎯 Starting training"),console.log(`🔧 Training mode: ${T.value&&_.value?"API (JAX)":"Local (JS)"}`),g.value.length===0||nt.value.length===0&&(!_.value||!T.value)){console.warn("Cannot start training: no neurons or training data");return}const v=F.value.config;console.log("Starting training with config:",v),F.value={steps:[],isRunning:!0,currentStep:0,totalSteps:v.epochs,config:v};try{T.value&&_.value?(console.log("🚀 Using API-based training with dynamic batch loading"),await p(v)):(console.log("💻 Using local training with pre-loaded batches"),await d(v)),await Tt()}catch(I){throw console.error("❌ Training failed:",I),I}finally{F.value.isRunning=!1,s.value=[],console.log("Training completed")}}async function p(v){console.log("🔧 API Training Mode - Dynamic batch loading");for(let I=1;I<=v.epochs&&F.value.isRunning;I++){console.log(`📊 API Epoch ${I}/${v.epochs}`),F.value.currentStep=I;const H=Math.max(nt.value.length,1e3),N=Math.ceil(H/v.batchSize);console.log(`Processing ${N} batches for epoch ${I}`);for(let c=0;c<N&&F.value.isRunning;c++)try{const i=await St(v.batchSize);if(i.length===0){console.warn("Empty batch received, skipping...");continue}s.value=i,console.log(`🔄 Processing batch ${c+1}/${N} (${i.length} samples)`),await P(i,v.learningRate);const h=await ct(i),R=ue(i,g.value,w.value,M.value)*100;F.value.steps.push({step:F.value.steps.length,loss:h,accuracy:R,trainAccuracy:R,testAccuracy:0,timestamp:Date.now(),neurons:g.value.map(G=>({id:G.id,weights:[...G.weights],bias:G.bias})),learningMetrics:{convergence:Math.abs(h-(F.value.steps[F.value.steps.length-1]?.loss||h)),weightDiversity:m(),activationSparsity:0}}),g.value=g.value.map(G=>({...G,weights:[...G.weights]})),Q.value++,console.log(`✅ API Batch processed - Loss: ${h.toFixed(4)}, Accuracy: ${R.toFixed(1)}%`);const j=Math.max(10,100/v.speed);await new Promise(G=>setTimeout(G,j))}catch(i){console.error(`❌ Failed to process batch ${c+1}:`,i)}const J=Math.max(50,500/v.speed);await new Promise(c=>setTimeout(c,J))}}async function d(v){console.log("💻 Local Training Mode - Pre-loaded batches");const I=Je(nt.value,v.batchSize);console.log(`Created ${I.length} training batches`);for(let H=1;H<=v.epochs&&F.value.isRunning;H++){console.log(`📊 Local Epoch ${H}/${v.epochs}`),F.value.currentStep=H;const N=[...I].sort(()=>Math.random()-.5);for(const c of N){if(!F.value.isRunning)break;const i=c.features.map((G,Lt)=>({features:G,label:c.labels[Lt]}));s.value=i;try{await P(i,v.learningRate)}catch(G){throw console.error("❌ Batch update failed:",G),G}const h=Dt(i),R=ue(i,g.value,w.value,M.value)*100;F.value.steps.push({step:F.value.steps.length,loss:h,accuracy:R,trainAccuracy:R,testAccuracy:0,timestamp:Date.now(),neurons:g.value.map(G=>({id:G.id,weights:[...G.weights],bias:G.bias})),learningMetrics:{convergence:Math.abs(h-(F.value.steps[F.value.steps.length-1]?.loss||h)),weightDiversity:m(),activationSparsity:0}}),g.value=g.value.map(G=>({...G,weights:[...G.weights]})),Q.value++,console.log(`✅ Local Batch processed - Loss: ${h.toFixed(4)}, Accuracy: ${R.toFixed(1)}%`);const j=Math.max(10,100/v.speed);await new Promise(G=>setTimeout(G,j))}const J=Math.max(50,500/v.speed);await new Promise(c=>setTimeout(c,J))}}function m(){if(g.value.length===0)return 0;const v=g.value.map(N=>Math.sqrt(N.weights.reduce((J,c)=>J+c*c,0))),I=v.reduce((N,J)=>N+J,0)/v.length,H=v.reduce((N,J)=>N+(J-I)**2,0)/v.length;return Math.sqrt(H)}async function P(v,I){if(T.value&&_.value)try{const{weights:N,biases:J}=Z.extractNetworkParams(g.value),{features:c,labels:i}=Z.extractBatchData(v);console.log("🔧 API Training Step - Input:",{weightsShape:N.map(R=>R.length),biasesLength:J.length,featuresShape:c.map(R=>R.length),labelsLength:i.length});const h=await Z.trainStep(N,J,c,i,w.value,M.value,I);console.log("🔧 API Training Step - Result:",{newWeightsShape:h.new_weights.map(R=>R.length),newBiasesLength:h.new_biases.length,resultKeys:Object.keys(h)}),g.value=g.value.map((R,j)=>({...R,weights:[...h.new_weights[j]],bias:h.new_biases[j]})),Q.value++,setTimeout(()=>{Qt.emit()},0);return}catch(N){console.warn("API training step failed, falling back to local:",N)}const H=g.value.map(N=>Ge(N,v,g.value,w.value,M.value));g.value.forEach((N,J)=>{const c=H[J];N.weights=N.weights.map((i,h)=>i-I*c.weights[h]),N.bias-=I*c.bias}),g.value=g.value.map(N=>({...N,weights:[...N.weights],bias:N.bias})),Q.value++,setTimeout(()=>{Qt.emit()},0)}function S(){F.value.isRunning=!1,s.value=[]}function o(){F.value.isRunning=!1,console.log("Training paused by user")}function y(){F.value.isRunning=!0,console.log("Training resumed by user")}function U(){F.value.steps=[],F.value.currentStep=0,s.value=[]}function Y(v){v.learningRate!==void 0&&(F.value.config.learningRate=v.learningRate),v.epochs!==void 0&&(F.value.config.epochs=v.epochs),v.batchSize!==void 0&&(F.value.config.batchSize=v.batchSize),v.speed!==void 0&&(F.value.config.speed=v.speed),v.regularization&&(F.value.config.regularization={...F.value.config.regularization,...v.regularization})}function rt(){g.value=[],e.value=[],u.value=[],s.value=[],E.value=null,a.value=[0,1,2,3,4,5,6,7,8,9],w.value="dotProduct",M.value="softmax",z.value="weights",U(),W.value={trainSize:0,testSize:0,numFeatures:784,numClasses:10}}async function _t(v=50){try{console.log(`Loading quick test with ${v} samples...`),await xt({train:v,test:Math.floor(v*.2)}),g.value.length===0&&await ot(),console.log(`Quick test setup completed with ${v} samples`)}catch(I){throw console.error("Quick test failed:",I),I}}async function tt(){if(!(!_.value||!T.value))try{const v=await Z.getModelWeights();if(v.weights.length===g.value.length){for(let I=0;I<g.value.length;I++)v.weights[I]&&v.weights[I].length===g.value[I].weights.length&&(g.value[I].weights=[...v.weights[I]],g.value[I].bias=v.biases[I]||g.value[I].bias);A.value=Date.now(),Q.value++,Qt.emit(),console.log("🔄 Weights synced from API:",{neuronsUpdated:g.value.length,timestamp:new Date(A.value).toISOString()})}}catch(v){console.warn("⚠️ Failed to sync weights from API:",v)}}async function yt(){if(!(!_.value||!T.value||g.value.length===0))try{const{weights:v,biases:I}=Z.extractNetworkParams(g.value);await Z.updateModelWeights(v,I),A.value=Date.now(),console.log("📤 Weights synced to API:",{neuronsUpdated:g.value.length,timestamp:new Date(A.value).toISOString()})}catch(v){console.warn("⚠️ Failed to sync weights to API:",v)}}function at(){$.value&&clearInterval($.value);const v=$t.value?2e3:1e4;$.value=setInterval(async()=>{_.value&&k.value&&await tt()},v),console.log("🔄 Started weight synchronization:",{interval:v})}function et(){$.value&&(clearInterval($.value),$.value=null,console.log("⏹️ Stopped weight synchronization"))}async function pt(){console.log("🔄 Force syncing weights..."),await tt()}async function Pt(v){if(!_.value||!T.value)return null;try{return await Z.getModelActivations(v,void 0,void 0,w.value,M.value)}catch(I){return console.warn("⚠️ Failed to get activations from API:",I),null}}async function le(v,I="diverging"){if(!_.value||!T.value)return null;try{return await Z.getWeightVisualization(v,I)}catch(H){return console.warn("⚠️ Failed to get weight visualization from API:",H),null}}async function he(v=10,I=784,H=st.value){try{if(_.value){console.log("🔧 Initializing ternary weights via API...");const N=await Z.initializeTernaryModel(v,I,H);g.value=N.weights.map((J,c)=>({id:c,weights:J,bias:N.biases[c],color:`hsl(${c*36%360}, 70%, 50%)`})),V.value=N.model_info.use_ternary_weights,st.value=N.model_info.sparsity_ratio,console.log("✅ Ternary weights initialized:",N.weight_distribution),await Zt()}else console.log("🔧 Initializing ternary weights locally..."),g.value=Array.from({length:v},(N,J)=>({id:J,weights:Array.from({length:I},()=>{const c=Math.random();return c<H?0:c>.5+H/2?1:-1}),bias:(Math.random()-.5)*.1,color:`hsl(${J*36%360}, 70%, 50%)`})),console.log("✅ Local ternary weights initialized");Qt.emit()}catch(N){throw console.error("❌ Failed to initialize ternary weights:",N),N}}async function re(){try{if(!_.value){console.warn("⚠️ API not connected, cannot quantize weights");return}console.log("🔧 Quantizing weights to ternary...");const v=await Z.quantizeWeights();g.value=v.quantized_weights.map((I,H)=>({...g.value[H],weights:I})),console.log("✅ Weights quantized to ternary:",v.quantized_distribution),await Zt(),Qt.emit()}catch(v){throw console.error("❌ Failed to quantize weights:",v),v}}async function Zt(){try{if(!_.value){console.warn("⚠️ API not connected, cannot get ternary stats");return}const v=await Z.getTernaryStats();it.value=v,console.log("📊 Ternary stats updated:",{is_ternary:v.is_ternary,unique_values:v.unique_values,distribution:v.overall_distribution})}catch(v){console.warn("⚠️ Failed to refresh ternary stats:",v),it.value=null}}function ge(v){st.value=Math.max(0,Math.min(1,v)),console.log("🔧 Ternary sparsity ratio set to:",st.value)}function te(){V.value=!V.value,console.log("🔧 Ternary weights",V.value?"enabled":"disabled"),_.value&&Z.toggleTernaryWeights(V.value).then(v=>{console.log("✅ API ternary weights updated:",v.message)}).catch(v=>{console.warn("⚠️ Failed to sync ternary weights with API:",v)})}return{neurons:g,trainData:e,testData:u,currentBatch:s,activeClasses:a,allClasses:r,selectedDataset:ht,availableDatasets:Ct,similarityMetric:w,activationFunction:M,visualizationMode:z,selectedNeuron:E,datasetInfo:W,optimizationHistory:F,visualizationUpdateTrigger:Q,useApiCompute:T,apiConnected:_,filteredTrainData:nt,filteredTestData:ft,trainAccuracy:vt,testAccuracy:kt,currentLoss:zt,isTraining:$t,lastWeightUpdate:A,weightUpdateInterval:$,autoSyncWeights:k,useTernaryWeights:V,ternarySparsityRatio:st,ternaryStats:it,initializeApiConnection:gt,initializeClassifier:ot,loadDataset:xt,toggleClass:x,getPrediction:L,getPredictionSync:ut,updateAccuracyMetrics:Tt,runTraining:D,stopTraining:S,pauseTraining:o,resumeTraining:y,clearHistory:U,updateOptimizationConfig:Y,reset:rt,quickTest:_t,loadAvailableDatasets:Mt,setSelectedDataset:Nt,getTrainingBatch:St,syncWeightsFromApi:tt,syncWeightsToApi:yt,startWeightSync:at,stopWeightSync:et,forceWeightSync:pt,getActivationsForVisualization:Pt,getWeightVisualizationData:le,initializeTernaryWeights:he,quantizeWeightsToTernary:re,refreshTernaryStats:Zt,setTernarySparsity:ge,toggleTernaryWeights:te}}),ts={class:"modal-header"},es={class:"header-info"},ss={class:"header-stats"},as={class:"class-id"},ns={class:"weight-norm"},is={class:"header-controls"},os={class:"zoom-controls"},ls=["disabled"],rs={class:"zoom-level"},cs=["disabled"],us={class:"colormap-selector"},ds={class:"modal-body"},vs={class:"visualization-container"},hs={class:"main-canvas-container"},gs={class:"tooltip-content"},ps={class:"pixel-coords"},ms={class:"pixel-value"},fs={class:"pixel-normalized"},_s={class:"canvas-controls"},ys={class:"side-panel"},bs={class:"stats-section"},ws={class:"stats-grid"},$s={class:"stat-item"},Cs={class:"stat-value"},Ms={class:"stat-item"},Ss={class:"stat-value"},Ts={class:"stat-item"},xs={class:"stat-value"},ks={class:"stat-item"},Is={class:"stat-value"},As={class:"stat-item"},zs={class:"stat-value"},Ds={class:"stat-item"},Ns={class:"stat-value"},Ps={class:"histogram-section"},Fs={class:"histogram-stats"},Ws={class:"hist-stat"},Ls={class:"hist-value"},Rs={class:"hist-stat"},Us={class:"hist-value"},Es={class:"legend-section"},qs={class:"colormap-legend"},Hs={class:"legend-labels"},Vs={class:"legend-min"},Bs={class:"legend-max"},Os={class:"modal-footer"},Gs={class:"footer-info"},Qs={class:"pixel-count"},Js={key:0,class:"update-time"},Xs={class:"footer-actions"},js=["disabled"],me=420,Ks=Ut({__name:"WeightVisualizationModal",props:{neuron:{},isVisible:{type:Boolean},colormap:{default:"diverging"}},emits:["close","update-neuron"],setup(g,{emit:e}){const u=g,s=e,a=f(),r=f(),w=f(u.colormap),M=f(1),z=f(!1),E=f(!1),T=f(null),_=me/28,W=f(!1),F=f({x:0,y:0}),Q=f({x:0,y:0}),X=f(null),O=f([...u.neuron.weights]),A=d=>["0","1","2","3","4","5","6","7","8","9"][d]||`Class ${d}`,$=d=>Math.sqrt(d.weights.reduce((m,P)=>m+P*P,0)),k=d=>d.weights.reduce((m,P)=>m+P,0)/d.weights.length,V=d=>{const m=k(d),P=d.weights.reduce((S,o)=>S+Math.pow(o-m,2),0)/d.weights.length;return Math.sqrt(P)};function st(d){const m=d.reduce((o,y)=>o+y,0)/d.length,P=Math.sqrt(d.reduce((o,y)=>o+Math.pow(y-m,2),0)/d.length);return d.reduce((o,y)=>o+Math.pow((y-m)/P,3),0)/d.length}function it(d){const m=d.reduce((o,y)=>o+y,0)/d.length,P=Math.sqrt(d.reduce((o,y)=>o+Math.pow(y-m,2),0)/d.length);return d.reduce((o,y)=>o+Math.pow((y-m)/P,4),0)/d.length-3}function nt(){ft()}function ft(){s("close")}function vt(){M.value=Math.min(8,M.value*1.5)}function kt(){M.value=Math.max(1,M.value/1.5)}function zt(){M.value=1,Q.value={x:0,y:0}}function $t(){z.value=!z.value,x()}function ht(d){d.preventDefault(),d.deltaY<0?vt():kt()}function Ct(d){W.value=!0,F.value={x:d.clientX,y:d.clientY}}function Dt(d){if(W.value){const m=d.clientX-F.value.x,P=d.clientY-F.value.y;Q.value={x:m,y:P}}gt(d)}function ct(){W.value=!1}function gt(d){if(!a.value)return;const m=a.value.getBoundingClientRect(),P=(d.clientX-m.left)/M.value,S=(d.clientY-m.top)/M.value,o=Math.floor(P/_),y=Math.floor(S/_);if(y>=0&&y<28&&o>=0&&o<28){const U=y*28+o,Y=O.value[U],rt=Math.min(...O.value),_t=Math.max(...O.value),tt=(Y-rt)/(_t-rt);X.value={x:d.clientX-m.left+10,y:d.clientY-m.top-10,row:y,col:o,value:Y,normalized:tt}}else X.value=null}function ot(){O.value=new Array(784).fill(0),E.value=!0,x()}function xt(){O.value=Array.from({length:784},()=>(Math.random()-.5)*.5),E.value=!0,x()}function Mt(){const d=Math.sqrt(O.value.reduce((m,P)=>m+P*P,0));d>0&&(O.value=O.value.map(m=>m/d),E.value=!0,x())}function Nt(){const d={...u.neuron,weights:[...O.value]};s("update-neuron",d),E.value=!1,T.value=Date.now()}function St(){if(!a.value)return;const d=document.createElement("a");d.download=`class_${u.neuron.id}_weights.png`,d.href=a.value.toDataURL(),d.click()}function x(){Kt(()=>{L(),ut()})}function L(){if(!a.value)return;const d=a.value,m=d.getContext("2d");if(!m)return;m.clearRect(0,0,d.width,d.height);const P=O.value,S=Math.min(...P),y=Math.max(...P)-S||.001;for(let U=0;U<28;U++)for(let Y=0;Y<28;Y++){const rt=U*28+Y,tt=(P[rt]-S)/y,yt=Y*_,at=U*_;m.fillStyle=Tt(tt,w.value),m.fillRect(yt,at,_,_)}if(z.value){m.strokeStyle="rgba(255, 255, 255, 0.3)",m.lineWidth=.5;for(let U=0;U<=28;U++)m.beginPath(),m.moveTo(U*_,0),m.lineTo(U*_,d.height),m.stroke(),m.beginPath(),m.moveTo(0,U*_),m.lineTo(d.width,U*_),m.stroke()}}function ut(){if(!r.value)return;const d=r.value,m=d.getContext("2d");if(!m)return;m.clearRect(0,0,d.width,d.height);const P=O.value,S=Math.min(...P),y=Math.max(...P)-S||.001,U=50,Y=new Array(U).fill(0);P.forEach(yt=>{const at=Math.floor((yt-S)/y*(U-1));Y[Math.max(0,Math.min(U-1,at))]++});const rt=Math.max(...Y),_t=d.width/U,tt=d.height-20;m.fillStyle="rgba(59, 130, 246, 0.7)",Y.forEach((yt,at)=>{const et=yt/rt*tt,pt=at*_t,Pt=d.height-et-10;m.fillRect(pt,Pt,_t-1,et)}),m.strokeStyle="rgba(156, 163, 175, 1)",m.lineWidth=1,m.beginPath(),m.moveTo(0,d.height-10),m.lineTo(d.width,d.height-10),m.stroke()}function Tt(d,m){const P=Math.max(0,Math.min(1,d));switch(m){case"diverging":if(P<.5){const tt=P*2;return`rgb(${Math.floor(255*(1-tt))}, ${Math.floor(255*(1-tt))}, 255)`}else{const tt=(P-.5)*2;return`rgb(255, ${Math.floor(255*(1-tt))}, ${Math.floor(255*(1-tt))})`}case"viridis":const S=Math.floor(255*(.267+.004*P)),o=Math.floor(255*(.005+.803*P)),y=Math.floor(255*(.334+.659*P));return`rgb(${S}, ${o}, ${y})`;case"plasma":const U=Math.floor(255*(.05+.95*P)),Y=Math.floor(255*(.03+.57*P)),rt=Math.floor(255*(.53+.47*P));return`rgb(${U}, ${Y}, ${rt})`;case"grayscale":const _t=Math.floor(255*P);return`rgb(${_t}, ${_t}, ${_t})`;case"hot":if(P<.33){const tt=P/.33;return`rgb(${Math.floor(255*tt)}, 0, 0)`}else if(P<.66){const tt=(P-.33)/.33;return`rgb(255, ${Math.floor(255*tt)}, 0)`}else{const tt=(P-.66)/.34;return`rgb(255, 255, ${Math.floor(255*tt)})`}default:return`rgb(${Math.floor(255*P)}, ${Math.floor(255*P)}, ${Math.floor(255*P)})`}}function D(d){const P=Date.now()-d;return P<1e3?"now":P<6e4?`${Math.floor(P/1e3)}s ago`:P<36e5?`${Math.floor(P/6e4)}m ago`:`${Math.floor(P/36e5)}h ago`}dt(()=>u.isVisible,d=>{d&&(O.value=[...u.neuron.weights],E.value=!1,Kt(()=>{x()}))}),dt(()=>u.neuron.weights,d=>{E.value||(O.value=[...d],x())},{deep:!0});function p(d){if(u.isVisible)switch(d.key){case"Escape":ft();break;case"+":case"=":vt();break;case"-":kt();break;case"0":zt();break;case"g":$t();break}}return Yt(()=>{document.addEventListener("keydown",p),x()}),oe(()=>{document.removeEventListener("keydown",p)}),(d,m)=>d.isVisible?(b(),C("div",{key:0,class:"weight-visualization-modal",onClick:nt},[t("div",{class:"modal-content",onClick:m[1]||(m[1]=fe(()=>{},["stop"]))},[t("div",ts,[t("div",es,[t("h2",null,n(A(d.neuron.id))+" Weight Visualization",1),t("div",ss,[t("span",as,"Class "+n(d.neuron.id),1),t("span",ns,"‖w‖: "+n($(d.neuron).toFixed(4)),1)])]),t("div",is,[t("div",os,[t("button",{onClick:kt,disabled:M.value<=1,class:"zoom-btn"},m[2]||(m[2]=[t("span",{class:"zoom-icon"},"🔍-",-1)]),8,ls),t("span",rs,n(M.value.toFixed(1))+"x",1),t("button",{onClick:vt,disabled:M.value>=8,class:"zoom-btn"},m[3]||(m[3]=[t("span",{class:"zoom-icon"},"🔍+",-1)]),8,cs)]),t("div",us,[m[5]||(m[5]=t("label",null,"Colormap:",-1)),Ft(t("select",{"onUpdate:modelValue":m[0]||(m[0]=P=>w.value=P),onChange:x},m[4]||(m[4]=[ae('<option value="diverging" data-v-be401aa3>Diverging</option><option value="viridis" data-v-be401aa3>Viridis</option><option value="plasma" data-v-be401aa3>Plasma</option><option value="grayscale" data-v-be401aa3>Grayscale</option><option value="hot" data-v-be401aa3>Hot</option>',5)]),544),[[Vt,w.value]])]),t("button",{onClick:ft,class:"close-btn"},m[6]||(m[6]=[t("span",{class:"close-icon"},"✕",-1)]))])]),t("div",ds,[t("div",vs,[t("div",hs,[t("div",{class:"canvas-wrapper",style:At({transform:`scale(${M.value})`})},[t("canvas",{ref_key:"mainCanvas",ref:a,class:"weight-canvas-main",width:me,height:me,onWheel:ht,onMousedown:Ct,onMousemove:Dt,onMouseup:ct,onMouseleave:ct},null,544),X.value?(b(),C("div",{key:0,class:"pixel-tooltip",style:At({left:X.value.x+"px",top:X.value.y+"px"})},[t("div",gs,[t("div",ps,"Pixel ("+n(X.value.row)+", "+n(X.value.col)+")",1),t("div",ms,"Value: "+n(X.value.value.toFixed(4)),1),t("div",fs,"Norm: "+n(X.value.normalized.toFixed(3)),1)])],4)):B("",!0)],4),t("div",_s,[t("button",{onClick:zt,class:"control-btn"},m[7]||(m[7]=[t("span",{class:"control-icon"},"🎯",-1),lt(" Reset View ")])),t("button",{onClick:$t,class:q(["control-btn",{active:z.value}])},m[8]||(m[8]=[t("span",{class:"control-icon"},"⊞",-1),lt(" Grid ")]),2),t("button",{onClick:St,class:"control-btn"},m[9]||(m[9]=[t("span",{class:"control-icon"},"💾",-1),lt(" Export ")]))])]),t("div",ys,[t("div",bs,[m[16]||(m[16]=t("h3",null,"Weight Statistics",-1)),t("div",ws,[t("div",$s,[m[10]||(m[10]=t("span",{class:"stat-label"},"Mean (μ):",-1)),t("span",Cs,n(k(d.neuron).toFixed(4)),1)]),t("div",Ms,[m[11]||(m[11]=t("span",{class:"stat-label"},"Std Dev (σ):",-1)),t("span",Ss,n(V(d.neuron).toFixed(4)),1)]),t("div",Ts,[m[12]||(m[12]=t("span",{class:"stat-label"},"Min:",-1)),t("span",xs,n(Math.min(...d.neuron.weights).toFixed(4)),1)]),t("div",ks,[m[13]||(m[13]=t("span",{class:"stat-label"},"Max:",-1)),t("span",Is,n(Math.max(...d.neuron.weights).toFixed(4)),1)]),t("div",As,[m[14]||(m[14]=t("span",{class:"stat-label"},"Range:",-1)),t("span",zs,n((Math.max(...d.neuron.weights)-Math.min(...d.neuron.weights)).toFixed(4)),1)]),t("div",Ds,[m[15]||(m[15]=t("span",{class:"stat-label"},"L2 Norm:",-1)),t("span",Ns,n($(d.neuron).toFixed(4)),1)])])]),t("div",Ps,[m[19]||(m[19]=t("h3",null,"Weight Distribution",-1)),t("canvas",{ref_key:"histogramCanvas",ref:r,class:"histogram-canvas",width:"280",height:"160"},null,512),t("div",Fs,[t("div",Ws,[m[17]||(m[17]=t("span",{class:"hist-label"},"Skewness:",-1)),t("span",Ls,n(st(d.neuron.weights).toFixed(3)),1)]),t("div",Rs,[m[18]||(m[18]=t("span",{class:"hist-label"},"Kurtosis:",-1)),t("span",Us,n(it(d.neuron.weights).toFixed(3)),1)])])]),t("div",Es,[m[20]||(m[20]=t("h3",null,"Color Scale",-1)),t("div",qs,[t("div",{class:q(["legend-gradient",`${w.value}-gradient`])},null,2),t("div",Hs,[t("span",Vs,n(Math.min(...d.neuron.weights).toFixed(3)),1),t("span",Bs,n(Math.max(...d.neuron.weights).toFixed(3)),1)])])]),t("div",{class:"actions-section"},[m[24]||(m[24]=t("h3",null,"Actions",-1)),t("div",{class:"action-buttons"},[t("button",{onClick:ot,class:"action-btn reset"},m[21]||(m[21]=[t("span",{class:"action-icon"},"🔄",-1),lt(" Reset Weights ")])),t("button",{onClick:xt,class:"action-btn randomize"},m[22]||(m[22]=[t("span",{class:"action-icon"},"🎲",-1),lt(" Randomize ")])),t("button",{onClick:Mt,class:"action-btn normalize"},m[23]||(m[23]=[t("span",{class:"action-icon"},"⚖️",-1),lt(" Normalize ")]))])])])])]),t("div",Os,[t("div",Gs,[t("span",Qs,n(d.neuron.weights.length)+" weights (28×28)",1),T.value?(b(),C("span",Js,"Updated "+n(D(T.value)),1)):B("",!0)]),t("div",Xs,[t("button",{onClick:ft,class:"footer-btn secondary"},"Close"),t("button",{onClick:Nt,class:"footer-btn primary",disabled:!E.value}," Apply Changes ",8,js)])])])])):B("",!0)}});const Ys=Et(Ks,[["__scopeId","data-v-be401aa3"]]),Zs={class:"mnist-visualization"},ta={class:"visualization-header"},ea={class:"header-section"},sa={class:"mode-selector"},aa=["onClick","title"],na={class:"sync-controls"},ia={class:"status-text"},oa={key:0,class:"sync-time"},la=["disabled"],ra={class:"auto-icon"},ca={class:"header-section"},ua={class:"control-group"},da=["value"],va={key:0,class:"control-group"},ha={class:"control-group"},ga={class:"indicator-text"},pa={key:0,class:"training-stats"},ma={class:"trend-arrow"},fa={class:"trend-arrow"},_a={class:"stat"},ya={key:1,class:"weight-update-indicator"},ba={class:"update-count"},wa={class:"visualization-content"},$a={key:0,class:"weights-section"},Ca={key:0,class:"all-neurons-grid"},Ma=["onClick"],Sa={class:"neuron-header"},Ta={class:"neuron-title"},xa={class:"neuron-label"},ka={class:"neuron-id"},Ia=["onClick"],Aa={class:"neuron-stats"},za={class:"stat-row"},Da={class:"stat-value"},Na={class:"stat-row"},Pa={class:"stat-value"},Fa={class:"stat-row"},Wa={class:"stat-value"},La=["onClick"],Ra={key:0,class:"canvas-overlay"},Ua={class:"weight-range"},Ea={class:"range-min"},qa={class:"range-bar"},Ha={class:"range-max"},Va={key:1,class:"comparison-view"},Ba={class:"comparison-grid"},Oa={class:"comparison-header"},Ga={class:"comparison-stats"},Qa=["width","height"],Ja={key:2,class:"single-neuron-view"},Xa={class:"neuron-detail-header"},ja={class:"detail-title"},Ka={class:"neuron-detail-stats"},Ya={class:"stat-grid"},Za={class:"stat-item"},tn={class:"stat-value"},en={class:"stat-item"},sn={class:"stat-value"},an={class:"stat-item"},nn={class:"stat-value"},on={class:"stat-item"},ln={class:"stat-value"},rn={class:"stat-item"},cn={class:"stat-value"},un={class:"stat-item"},dn={class:"stat-value"},vn={class:"detail-visualization"},hn={class:"detail-canvas-container"},gn=["width","height"],pn={class:"canvas-info"},mn={class:"colormap-legend"},fn={class:"legend-label"},_n={class:"legend-label"},yn={class:"weight-histogram"},bn={class:"histogram-stats"},wn={class:"hist-stat"},$n={class:"hist-value"},Cn={class:"hist-stat"},Mn={class:"hist-value"},Sn={key:1,class:"activations-view"},Tn={class:"activations-content"},xn={class:"sample-input-section"},kn={class:"sample-container"},In=["width","height"],An={key:0,class:"sample-info"},zn={class:"info-item"},Dn={class:"info-value prediction"},Nn={class:"info-item"},Pn={class:"info-value confidence"},Fn={class:"activations-display"},Wn={class:"activations-grid"},Ln={class:"activation-header"},Rn={class:"activation-label"},Un={class:"activation-value"},En={class:"activation-bar-wrapper"},qn={key:0,class:"activation-details"},Hn={class:"similarity-score"},Vn={key:2,class:"similarity-view"},Bn={class:"similarity-header"},On={class:"similarity-controls"},Gn={class:"similarity-content"},Qn={class:"test-input-display"},Jn=["width","height"],Xn={class:"metrics-comparison"},jn={class:"metric-header"},Kn=["onClick"],Yn={class:"metric-bars"},Zn={class:"metric-neuron-label"},ti={class:"metric-bar"},ei={class:"metric-value"},si={class:"info-panel"},ai={class:"info-section"},ni={class:"info-grid"},ii={class:"info-item"},oi={class:"info-value"},li={class:"info-item"},ri={class:"info-value"},ci={class:"info-item"},ui={class:"info-value"},di={class:"info-section"},vi={class:"info-grid"},hi={class:"info-item"},gi={class:"info-value"},pi={class:"info-item"},mi={class:"info-value"},fi={class:"info-item"},_i={class:"info-value"},yi={class:"info-section"},bi={class:"info-grid"},wi={class:"info-item"},$i={class:"info-value performance"},Ci={class:"info-item"},Mi={class:"info-value performance"},Si={class:"info-item"},Ti={class:"info-value performance"},Ht=28,Ie=224,xi=Ut({__name:"MNISTVisualization",setup(g){function e(c){return getComputedStyle(document.documentElement).getPropertyValue(c).trim()}function u(c){const i=e(c);if(i.includes(" ")){const[h,R,j]=i.split(" ").map(G=>parseInt(G));return`rgb(${h}, ${R}, ${j})`}return i}const s=Bt(),a=f("weights"),r=f("all"),w=f("diverging"),M=f("normal"),z=f(!1),E=f(null),T=f(!1),_=f(!1),W=f(null),F=f(0),Q=f(!1),X=K(()=>s.currentLoss),O=f(!1),A=f(0),$=f(0),k=f(0),V=f(0),st=K(()=>X.value<k.value),it=K(()=>X.value>k.value),nt=K(()=>s.trainAccuracy>V.value),ft=K(()=>st.value?"↘️":it.value?"↗️":"→"),vt=K(()=>nt.value?"↗️":s.trainAccuracy<V.value?"↘️":"→"),kt=f({}),zt=f({}),$t=f(null),ht=f(null),Ct=f(null),Dt=f(null),ct=f(new Array(784).fill(0)),gt=f(null),ot=f("random"),xt=f(!1),Mt=[{id:"weights",label:"Weights",icon:_e,description:"View weight matrices as images"},{id:"activations",label:"Activations",icon:ye,description:"Real-time neural activations"},{id:"similarity",label:"Similarity",icon:Pe,description:"Compare similarity metrics"}],Nt=[{id:"dotProduct",label:"Dot Product"},{id:"euclidean",label:"Euclidean"},{id:"yatProduct",label:"YAT Product"},{id:"cosine",label:"Cosine"},{id:"manhattan",label:"Manhattan"},{id:"rbf",label:"RBF"}],St=["0","1","2","3","4","5","6","7","8","9"],x=K(()=>r.value==="all"||r.value==="comparison"?null:s.neurons.find(c=>c.id===parseInt(r.value))||null);function L(c){return St[c]||`Class ${c}`}function ut(c){const h=Date.now()-c;return h<1e3?"now":h<6e4?`${Math.floor(h/1e3)}s ago`:h<36e5?`${Math.floor(h/6e4)}m ago`:`${Math.floor(h/36e5)}h ago`}async function Tt(){if(!(!s.apiConnected||T.value)){T.value=!0,_.value=!1;try{await s.forceWeightSync(),W.value=Date.now(),await N()}catch(c){console.error("Force sync failed:",c),_.value=!0}finally{T.value=!1}}}function D(){s.autoSyncWeights=!s.autoSyncWeights,s.autoSyncWeights?s.startWeightSync():s.stopWeightSync()}function p(){console.log("Update rate changed to:",M.value)}function d(c){E.value=c,z.value=!0}function m(){z.value=!1,E.value=null}function P(c){const i=s.neurons.findIndex(h=>h.id===c.id);i!==-1&&(s.neurons[i]=c,N())}function S(c){return console.log(c),Date.now()-(W.value||0)<2e3}function o(c){return Math.sqrt(c.weights.reduce((i,h)=>i+h*h,0))}function y(c){return c.weights.reduce((i,h)=>i+h,0)/c.weights.length}function U(c){const i=y(c),h=c.weights.reduce((R,j)=>R+Math.pow(j-i,2),0)/c.weights.length;return Math.sqrt(h)}function Y(c){const i=c.reduce((j,G)=>j+G,0)/c.length,h=Math.sqrt(c.reduce((j,G)=>j+Math.pow(G-i,2),0)/c.length);return c.reduce((j,G)=>j+Math.pow((G-i)/h,3),0)/c.length}function rt(c){const i=c.reduce((j,G)=>j+G,0)/c.length,h=Math.sqrt(c.reduce((j,G)=>j+Math.pow(G-i,2),0)/c.length);return c.reduce((j,G)=>j+Math.pow((G-i)/h,4),0)/c.length-3}function _t(c,i){if(gt.value?.similarity_breakdown?.[i])return Math.max(0,Math.min(1,gt.value.similarity_breakdown[i].activation_value||0));if(ct.value.length===0)return 0;try{const h=ne(c,ct.value,s.similarityMetric);return Math.max(0,Math.min(1,(h+5)/10))}catch{return 0}}function tt(c){return`hsl(${(1-c)*240}, 70%, 50%)`}function yt(c,i){if(ct.value.length===0)return 0;try{const h=ne(c,ct.value,i);return Math.max(0,Math.min(1,(h+5)/10))}catch{return 0}}function at(c){return`hsl(${c*60+240}, 70%, 50%)`}async function et(){ct.value=new Array(784).fill(0).map(()=>Math.random()),await I(),await le()}async function pt(){try{const c=await s.getTrainingBatch(1);c.length>0&&(ct.value=c[0].features,await I(),await le())}catch(c){console.warn("Failed to load test sample:",c),et()}}function Pt(){ct.value=new Array(784).fill(0),gt.value=null,I()}async function le(){if(s.apiConnected&&ct.value.length>0)try{gt.value=await s.getActivationsForVisualization(ct.value)}catch(c){console.warn("Failed to get API activations:",c),gt.value=null}}function he(c){s.similarityMetric=c,re()}async function re(){switch(ot.value){case"zeros":ct.value=new Array(784).fill(0);break;case"ones":ct.value=new Array(784).fill(1);break;case"test_sample":await pt();return;case"random":default:await et();return}await H()}async function Zt(){x.value&&(x.value.weights=Array.from({length:784},()=>(Math.random()-.5)*.1),x.value.bias=0,await s.syncWeightsToApi(),await N())}async function ge(){x.value&&(x.value.weights=Array.from({length:784},()=>(Math.random()-.5)*.5),x.value.bias=(Math.random()-.5)*.1,await s.syncWeightsToApi(),await N())}function te(c,i){const h=c.getContext("2d");if(!h||i.length!==784){console.warn("❌ renderWeightCanvas: Invalid context or weights length:",{hasContext:!!h,weightsLength:i.length,expected:784});return}try{const R=Math.min(...i),G=Math.max(...i)-R||.001;h.clearRect(0,0,c.width,c.height);const Lt=Ke(i,28,28),It=h.createImageData(28,28);for(let Jt=0;Jt<28;Jt++)for(let Ot=0;Ot<28;Ot++){let qt=(Lt[Jt][Ot]-R)/G;qt=Math.max(0,Math.min(1,qt));const pe=v(qt,w.value),ce=(Jt*28+Ot)*4;It.data[ce]=pe.r,It.data[ce+1]=pe.g,It.data[ce+2]=pe.b,It.data[ce+3]=255}h.putImageData(It,0,0)}catch(R){console.error("Error rendering weight canvas:",R)}}function v(c,i){switch(c=Math.max(0,Math.min(1,c)),i){case"diverging":if(c<.5){const j=c*2;return{r:Math.round(j*255),g:Math.round(j*255),b:255}}else{const j=(c-.5)*2;return{r:255,g:Math.round((1-j)*255),b:Math.round((1-j)*255)}}case"viridis":return{r:Math.round(c*68+(1-c)*68),g:Math.round(c*1+(1-c)*1),b:Math.round(c*84+(1-c)*84)};case"grayscale":const h=Math.round(c*255);return{r:h,g:h,b:h};default:const R=Math.round(c*255);return{r:R,g:R,b:R}}}async function I(){const c=Ct.value;if(!c)return;const i=c.getContext("2d");if(!i)return;i.clearRect(0,0,c.width,c.height);const h=i.createImageData(28,28);for(let G=0;G<784;G++){const Lt=Math.round(ct.value[G]*255),It=G*4;h.data[It]=Lt,h.data[It+1]=Lt,h.data[It+2]=Lt,h.data[It+3]=255}const R=document.createElement("canvas");R.width=28,R.height=28,R.getContext("2d").putImageData(h,0,0),i.imageSmoothingEnabled=!1,i.drawImage(R,0,0,c.width,c.height)}async function H(){Dt.value&&await I()}async function N(){xt.value=!0;try{for(const c of s.neurons){const i=kt.value[c.id];i&&te(i,c.weights);const h=zt.value[c.id];h&&te(h,c.weights)}x.value&&$t.value&&(te($t.value,x.value.weights),J())}finally{xt.value=!1}}function J(){if(!x.value||!ht.value)return;const c=ht.value,i=c.getContext("2d");if(!i)return;const h=x.value.weights,R=20,j=Math.min(...h),Lt=(Math.max(...h)-j)/R,It=new Array(R).fill(0);for(const Gt of h){const qt=Math.min(R-1,Math.floor((Gt-j)/Lt));It[qt]++}const Jt=Math.max(...It);i.clearRect(0,0,c.width,c.height),i.fillStyle=u("--color-primary");const Ot=c.width/R;for(let Gt=0;Gt<R;Gt++){const qt=It[Gt]/Jt*c.height;i.fillRect(Gt*Ot,c.height-qt,Ot-1,qt)}}return dt(()=>s.visualizationUpdateTrigger,N),dt(()=>s.neurons,N,{deep:!0}),dt(()=>a.value,N),dt(()=>w.value,N),dt(()=>s.isTraining,c=>{O.value=c,c&&(F.value=s.optimizationHistory.currentStep)}),dt(()=>s.optimizationHistory.currentStep,c=>{if(F.value=c,s.isTraining&&c>0){const i=s.optimizationHistory.steps;if(i.length>=2){const h=i.slice(-5);if(h.length>=2){const R=h[h.length-1].timestamp-h[0].timestamp,j=h.length-1;R>0&&($.value=j/(R/1e3)||0)}}}}),dt(()=>s.currentLoss,(c,i)=>{i!==void 0&&(k.value=i),console.log(c)}),dt(()=>s.trainAccuracy,(c,i)=>{i!==void 0&&(V.value=i),console.log(c)}),dt(()=>s.neurons,(c,i)=>{if(s.isTraining&&i){let h=0;c.forEach((R,j)=>{i[j]&&JSON.stringify(R.weights)!==JSON.stringify(i[j].weights)&&h++}),h>0&&(A.value=h,Q.value=!0,setTimeout(()=>{A.value=0,Q.value=!1},2e3))}},{deep:!0}),Yt(()=>{Qt.on(N),N(),et()}),oe(()=>{Qt.off(N)}),(c,i)=>(b(),C(bt,null,[t("div",Zs,[t("div",ta,[t("div",ea,[t("div",sa,[(b(),C(bt,null,wt(Mt,h=>t("button",{key:h.id,onClick:R=>a.value=h.id,class:q(["mode-btn",{active:a.value===h.id}]),title:h.description},[(b(),Wt(Ce(h.icon),{class:"mode-icon"})),t("span",null,n(h.label),1)],10,aa)),64))]),t("div",na,[t("div",{class:q(["sync-status",{connected:l(s).apiConnected,syncing:T.value,error:_.value}])},[i[4]||(i[4]=t("div",{class:"status-dot"},null,-1)),t("span",ia,n(l(s).apiConnected?T.value?"Syncing...":"API Connected":"Local Mode"),1),W.value?(b(),C("span",oa," Last sync: "+n(ut(W.value)),1)):B("",!0)],2),t("button",{onClick:Tt,disabled:!l(s).apiConnected||T.value,class:"sync-btn",title:"Force sync weights from API"},[t("div",{class:q(["sync-icon",{spinning:T.value}])},"🔄",2),i[5]||(i[5]=lt(" Sync "))],8,la),t("button",{onClick:D,class:q(["auto-sync-btn",{active:l(s).autoSyncWeights}]),title:"Toggle automatic weight synchronization"},[t("div",ra,n(l(s).autoSyncWeights?"🔄":"⏸️"),1),i[6]||(i[6]=lt(" Auto "))],2)])]),t("div",ca,[t("div",ua,[i[9]||(i[9]=t("label",{class:"control-label"},"View:",-1)),Ft(t("select",{"onUpdate:modelValue":i[0]||(i[0]=h=>r.value=h),class:"neuron-select"},[i[7]||(i[7]=t("option",{value:"all"},"All Classes (Grid)",-1)),i[8]||(i[8]=t("option",{value:"comparison"},"Side Comparison",-1)),(b(!0),C(bt,null,wt(l(s).neurons,h=>(b(),C("option",{key:h.id,value:h.id}," Class "+n(h.id)+" - "+n(L(h.id)),9,da))),128))],512),[[Vt,r.value]])]),a.value==="weights"?(b(),C("div",va,[i[11]||(i[11]=t("label",{class:"control-label"},"Colormap:",-1)),Ft(t("select",{"onUpdate:modelValue":i[1]||(i[1]=h=>w.value=h),class:"colormap-select",onChange:N},i[10]||(i[10]=[ae('<option value="diverging" data-v-3759e911>Diverging (Blue-Red)</option><option value="viridis" data-v-3759e911>Viridis</option><option value="plasma" data-v-3759e911>Plasma</option><option value="grayscale" data-v-3759e911>Grayscale</option><option value="cool" data-v-3759e911>Cool</option><option value="hot" data-v-3759e911>Hot</option>',6)]),544),[[Vt,w.value]])])):B("",!0),t("div",ha,[i[13]||(i[13]=t("label",{class:"control-label"},"Update Rate:",-1)),Ft(t("select",{"onUpdate:modelValue":i[2]||(i[2]=h=>M.value=h),onChange:p,class:"update-rate-select"},i[12]||(i[12]=[ae('<option value="realtime" data-v-3759e911>Real-time</option><option value="fast" data-v-3759e911>Fast (1s)</option><option value="normal" data-v-3759e911>Normal (3s)</option><option value="slow" data-v-3759e911>Slow (10s)</option><option value="manual" data-v-3759e911>Manual</option>',5)]),544),[[Vt,M.value]])])]),t("div",{class:q(["training-indicator",{active:l(s).isTraining,"high-activity":Q.value,"live-updating":O.value}])},[t("div",{class:q(["indicator-dot",{pulsing:l(s).isTraining}])},null,2),t("span",ga,n(l(s).isTraining?`Training (Epoch ${F.value})`:"Training Idle"),1),l(s).isTraining?(b(),C("div",pa,[t("span",{class:q(["stat",{improving:st.value,degrading:it.value}])},[lt(" Loss: "+n(X.value.toFixed(4))+" ",1),t("span",ma,n(ft.value),1)],2),t("span",{class:q(["stat",{improving:nt.value}])},[lt(" Acc: "+n(l(s).trainAccuracy.toFixed(1))+"% ",1),t("span",fa,n(vt.value),1)],2),t("span",_a," Speed: "+n($.value.toFixed(1))+" batch/s ",1)])):B("",!0),A.value>0?(b(),C("div",ya,[i[14]||(i[14]=t("div",{class:"update-pulse"},null,-1)),t("span",ba,n(A.value)+" updates",1)])):B("",!0)],2)]),t("div",wa,[a.value==="weights"?(b(),C("div",$a,[r.value==="all"?(b(),C("div",Ca,[(b(!0),C(bt,null,wt(l(s).neurons,h=>(b(),C("div",{key:h.id,class:q(["neuron-weight-container",{selected:r.value===h.id.toString(),"high-activity":A.value>0&&S(h.id)}]),onClick:R=>d(h)},[t("div",Sa,[t("div",Ta,[t("span",xa,n(L(h.id)),1),t("span",ka,"Class "+n(h.id),1),t("button",{onClick:fe(R=>d(h),["stop"]),class:"expand-btn",title:"Click to expand weight visualization"}," 🔍 ",8,Ia)]),t("div",Aa,[t("div",za,[i[15]||(i[15]=t("span",{class:"stat-label"},"‖w‖:",-1)),t("span",Da,n(o(h).toFixed(3)),1)]),t("div",Na,[i[16]||(i[16]=t("span",{class:"stat-label"},"μ:",-1)),t("span",Pa,n(y(h).toFixed(3)),1)]),t("div",Fa,[i[17]||(i[17]=t("span",{class:"stat-label"},"σ:",-1)),t("span",Wa,n(U(h).toFixed(3)),1)])])]),t("div",{class:"canvas-container",onClick:fe(R=>d(h),["stop"])},[t("canvas",{ref_for:!0,ref:R=>{R&&(kt.value[h.id]=R)},class:"weight-canvas enhanced",width:Ie,height:Ie},null,512),xt.value?(b(),C("div",Ra,i[18]||(i[18]=[t("div",{class:"update-spinner"},null,-1)]))):B("",!0),i[19]||(i[19]=t("div",{class:"canvas-overlay-hover"},[t("div",{class:"hover-text"},[t("span",{class:"hover-icon"},"🔍"),t("span",null,"Click to expand")])],-1))],8,La),t("div",Ua,[t("span",Ea,n(Math.min(...h.weights).toFixed(2)),1),t("div",qa,[t("div",{class:"range-fill",style:At({width:`${Math.abs(y(h))*100}%`,backgroundColor:h.color})},null,4)]),t("span",Ha,n(Math.max(...h.weights).toFixed(2)),1)])],10,Ma))),128))])):r.value==="comparison"?(b(),C("div",Va,[t("div",Ba,[(b(!0),C(bt,null,wt(l(s).neurons,h=>(b(),C("div",{key:h.id,class:"comparison-item"},[t("div",Oa,[t("h4",null,n(L(h.id)),1),t("div",Ga,[t("span",null,"‖w‖: "+n(o(h).toFixed(3)),1)])]),t("canvas",{ref_for:!0,ref:R=>{R&&(zt.value[h.id]=R)},class:"comparison-canvas",width:Ht*2,height:Ht*2},null,8,Qa)]))),128))])])):x.value?(b(),C("div",Ja,[t("div",Xa,[t("div",ja,[t("h3",null,n(L(x.value.id))+" (Class "+n(x.value.id)+")",1),t("div",{class:"detail-actions"},[t("button",{onClick:Zt,class:"reset-btn"},"Reset Weights"),t("button",{onClick:ge,class:"randomize-btn"},"Randomize")])]),t("div",Ka,[t("div",Ya,[t("div",Za,[i[20]||(i[20]=t("span",{class:"stat-label"},"Weight Norm (‖w‖):",-1)),t("span",tn,n(o(x.value).toFixed(4)),1)]),t("div",en,[i[21]||(i[21]=t("span",{class:"stat-label"},"Bias (b):",-1)),t("span",sn,n(x.value.bias.toFixed(4)),1)]),t("div",an,[i[22]||(i[22]=t("span",{class:"stat-label"},"Mean Weight (μ):",-1)),t("span",nn,n(y(x.value).toFixed(4)),1)]),t("div",on,[i[23]||(i[23]=t("span",{class:"stat-label"},"Std Dev (σ):",-1)),t("span",ln,n(U(x.value).toFixed(4)),1)]),t("div",rn,[i[24]||(i[24]=t("span",{class:"stat-label"},"Min Weight:",-1)),t("span",cn,n(Math.min(...x.value.weights).toFixed(4)),1)]),t("div",un,[i[25]||(i[25]=t("span",{class:"stat-label"},"Max Weight:",-1)),t("span",dn,n(Math.max(...x.value.weights).toFixed(4)),1)])])])]),t("div",vn,[t("div",hn,[t("canvas",{ref_key:"detailCanvas",ref:$t,class:"weight-canvas-large",width:Ht*6,height:Ht*6},null,8,gn),t("div",pn,[t("div",mn,[t("span",fn,n(Math.min(...x.value.weights).toFixed(3)),1),t("div",{class:q(["legend-gradient",`${w.value}-gradient`])},null,2),t("span",_n,n(Math.max(...x.value.weights).toFixed(3)),1)])])]),t("div",yn,[i[28]||(i[28]=t("h4",null,"Weight Distribution",-1)),t("canvas",{ref_key:"histogramCanvas",ref:ht,class:"histogram-canvas",width:"400",height:"200"},null,512),t("div",bn,[t("div",wn,[i[26]||(i[26]=t("span",{class:"hist-label"},"Skewness:",-1)),t("span",$n,n(Y(x.value.weights).toFixed(3)),1)]),t("div",Cn,[i[27]||(i[27]=t("span",{class:"hist-label"},"Kurtosis:",-1)),t("span",Mn,n(rt(x.value.weights).toFixed(3)),1)])])])])])):B("",!0)])):a.value==="activations"?(b(),C("div",Sn,[t("div",{class:"activations-header"},[i[29]||(i[29]=t("h3",null,"Real-time Neural Activations",-1)),t("div",{class:"activation-controls"},[t("button",{onClick:et,class:"sample-btn"}," 🎲 Random Sample "),t("button",{onClick:pt,class:"sample-btn"}," 📊 Test Sample "),t("button",{onClick:Pt,class:"sample-btn"}," 🗑️ Clear ")])]),t("div",Tn,[t("div",xn,[t("div",kn,[i[32]||(i[32]=t("h4",null,"Input Sample",-1)),t("canvas",{ref_key:"sampleCanvas",ref:Ct,class:"sample-canvas",width:Ht*4,height:Ht*4,onClick:et},null,8,In),i[33]||(i[33]=t("p",{class:"sample-hint"},"Click to generate a new random sample",-1)),gt.value?(b(),C("div",An,[t("div",zn,[i[30]||(i[30]=t("span",{class:"info-label"},"Predicted:",-1)),t("span",Dn,n(gt.value.predicted_class),1)]),t("div",Nn,[i[31]||(i[31]=t("span",{class:"info-label"},"Confidence:",-1)),t("span",Pn,n((gt.value.confidence*100).toFixed(1))+"%",1)])])):B("",!0)])]),t("div",Fn,[t("div",Wn,[(b(!0),C(bt,null,wt(l(s).neurons,(h,R)=>(b(),C("div",{key:h.id,class:"activation-item"},[t("div",Ln,[t("span",Rn,n(L(h.id)),1),t("span",Un,n(_t(h,R).toFixed(3)),1)]),t("div",En,[t("div",{class:"activation-bar",style:At({width:`${Math.max(2,_t(h,R)*100)}%`,backgroundColor:tt(_t(h,R))})},null,4)]),gt.value?(b(),C("div",qn,[t("span",Hn," Sim: "+n(gt.value.similarity_breakdown?.[R]?.similarity_score?.toFixed(3)||"0.000"),1)])):B("",!0)]))),128))])])])])):a.value==="similarity"?(b(),C("div",Vn,[t("div",Bn,[i[36]||(i[36]=t("h3",null,"Similarity Metrics Comparison",-1)),t("div",On,[i[35]||(i[35]=t("label",{class:"control-label"},"Test Input:",-1)),Ft(t("select",{"onUpdate:modelValue":i[3]||(i[3]=h=>ot.value=h),onChange:re},i[34]||(i[34]=[t("option",{value:"random"},"Random Pattern",-1),t("option",{value:"zeros"},"All Zeros",-1),t("option",{value:"ones"},"All Ones",-1),t("option",{value:"test_sample"},"Test Sample",-1)]),544),[[Vt,ot.value]])])]),t("div",Gn,[t("div",Qn,[t("canvas",{ref_key:"similarityInputCanvas",ref:Dt,class:"similarity-input-canvas",width:Ht*3,height:Ht*3},null,8,Jn)]),t("div",Xn,[(b(),C(bt,null,wt(Nt,h=>t("div",{key:h.id,class:q(["metric-section",{active:l(s).similarityMetric===h.id}])},[t("div",jn,[t("h5",null,n(h.label),1),t("button",{onClick:R=>he(h.id),class:q(["metric-select-btn",{active:l(s).similarityMetric===h.id}])},n(l(s).similarityMetric===h.id?"Active":"Select"),11,Kn)]),t("div",Yn,[(b(!0),C(bt,null,wt(l(s).neurons,R=>(b(),C("div",{key:R.id,class:"metric-bar-container"},[t("span",Zn,n(L(R.id)),1),t("div",ti,[t("div",{class:"metric-bar-fill",style:At({width:`${Math.max(2,yt(R,h.id)*100)}%`,backgroundColor:at(yt(R,h.id))})},null,4)]),t("span",ei,n(yt(R,h.id).toFixed(3)),1)]))),128))])],2)),64))])])])):B("",!0)]),t("div",si,[t("div",ai,[i[40]||(i[40]=t("h4",null,"Dataset Info",-1)),t("div",ni,[t("div",ii,[i[37]||(i[37]=t("span",{class:"info-label"},"Dataset:",-1)),t("span",oi,n(l(s).selectedDataset||"Local"),1)]),t("div",li,[i[38]||(i[38]=t("span",{class:"info-label"},"Train Size:",-1)),t("span",ri,n(l(s).datasetInfo.trainSize.toLocaleString()),1)]),t("div",ci,[i[39]||(i[39]=t("span",{class:"info-label"},"Test Size:",-1)),t("span",ui,n(l(s).datasetInfo.testSize.toLocaleString()),1)])])]),t("div",di,[i[44]||(i[44]=t("h4",null,"Model Config",-1)),t("div",vi,[t("div",hi,[i[41]||(i[41]=t("span",{class:"info-label"},"Similarity:",-1)),t("span",gi,n(l(s).similarityMetric),1)]),t("div",pi,[i[42]||(i[42]=t("span",{class:"info-label"},"Activation:",-1)),t("span",mi,n(l(s).activationFunction),1)]),t("div",fi,[i[43]||(i[43]=t("span",{class:"info-label"},"Classes:",-1)),t("span",_i,n(l(s).activeClasses.length)+"/10",1)])])]),t("div",yi,[i[48]||(i[48]=t("h4",null,"Performance",-1)),t("div",bi,[t("div",wi,[i[45]||(i[45]=t("span",{class:"info-label"},"Train Acc:",-1)),t("span",$i,n(l(s).trainAccuracy.toFixed(1))+"%",1)]),t("div",Ci,[i[46]||(i[46]=t("span",{class:"info-label"},"Test Acc:",-1)),t("span",Mi,n(l(s).testAccuracy.toFixed(1))+"%",1)]),t("div",Si,[i[47]||(i[47]=t("span",{class:"info-label"},"Loss:",-1)),t("span",Ti,n(X.value.toFixed(4)),1)])])])])]),E.value?(b(),Wt(Ys,{key:0,neuron:E.value,"is-visible":z.value,colormap:w.value,onClose:m,onUpdateNeuron:P},null,8,["neuron","is-visible","colormap"])):B("",!0)],64))}});const Ae=Et(xi,[["__scopeId","data-v-3759e911"]]),ki={class:"mnist-class-toggles"},Ii={class:"toggles-container"},Ai=["onClick","disabled","title"],zi={class:"digit-label"},Di={class:"digit-count"},Ni={class:"toggle-actions"},Pi=["disabled"],Fi=["disabled"],Wi=Ut({__name:"MNISTClassToggles",setup(g){const e=Bt(),u=[0,1,2,3,4,5,6,7,8,9],s=K(()=>e.activeClasses.length===10),a=K(()=>e.activeClasses.every(z=>z%2===0));function r(z){return e.filteredTrainData.filter(E=>E.label===z).length}function w(){s.value?e.activeClasses=[]:e.activeClasses=[0,1,2,3,4,5,6,7,8,9]}function M(){a.value?e.activeClasses=[1,3,5,7,9]:e.activeClasses=[0,2,4,6,8]}return(z,E)=>(b(),C("div",ki,[t("div",Ii,[(b(),C(bt,null,wt(u,T=>t("button",{key:T,onClick:_=>l(e).toggleClass(T),class:q(["digit-toggle",{active:l(e).activeClasses.includes(T),training:l(e).isTraining}]),disabled:l(e).isTraining,title:`Toggle digit ${T}`},[t("span",zi,n(T),1),t("span",Di,n(r(T)),1)],10,Ai)),64))]),t("div",Ni,[t("button",{onClick:w,class:"action-btn",disabled:l(e).isTraining},n(s.value?"Hide All":"Show All"),9,Pi),t("button",{onClick:M,class:"action-btn",disabled:l(e).isTraining},n(a.value?"Odds Only":"Evens Only"),9,Fi)])]))}});const Li=Et(Wi,[["__scopeId","data-v-9d8b924b"]]),Ri={class:"mnist-data-panel"},Ui={class:"panel-section"},Ei={class:"dataset-selector"},qi=["disabled"],Hi=["value"],Vi={key:0,class:"api-status"},Bi={key:1,class:"api-status"},Oi={class:"panel-section"},Gi={key:0,class:"dataset-stats"},Qi={class:"stat-card"},Ji={class:"stat-value"},Xi={class:"stat-card"},ji={class:"stat-value"},Ki={class:"stat-card"},Yi={class:"stat-value"},Zi={class:"dataset-actions"},to=["disabled"],eo=["disabled"],so=["disabled"],ao={key:1,class:"loading-indicator"},no={key:0,class:"panel-section"},io={class:"class-distribution"},oo={class:"class-label"},lo={class:"class-bar-wrapper"},ro={class:"class-count"},co={key:1,class:"panel-section"},uo={class:"sample-grid"},vo=["onClick"],ho={class:"sample-label"},go=Ut({__name:"MNISTDataPanel",setup(g){const e=Bt(),u=Me(),s=f(!1),a=f([]),r=f({}),w=[0,1,2,3,4,5,6,7,8,9],M=K(()=>Math.max(...w.map($=>z($))));function z($){return e.trainData.filter(k=>k.label===$).length}function E($){return M.value===0?0:z($)/M.value*100}function T($){return["#ff6b6b","#4ecdc4","#45b7d1","#96ceb4","#feca57","#ff9ff3","#54a0ff","#5f27cd","#00d2d3","#ff9f43"][$]||"#cccccc"}async function _(){s.value=!0;try{await e.quickTest(200),u.addNotification({message:"Quick demo loaded successfully!",type:"success"}),O()}catch($){u.addNotification({message:`Failed to load demo: ${$}`,type:"error"})}finally{s.value=!1}}async function W(){s.value=!0;try{await e.loadDataset({train:1e3,test:200}),u.addNotification({message:"Small dataset loaded successfully!",type:"success"}),O()}catch($){u.addNotification({message:`Failed to load dataset: ${$}`,type:"error"})}finally{s.value=!1}}async function F(){s.value=!0;try{await e.loadDataset({train:5e3,test:1e3}),u.addNotification({message:"Medium dataset loaded successfully!",type:"success"}),O()}catch($){u.addNotification({message:`Failed to load dataset: ${$}`,type:"error"})}finally{s.value=!1}}async function Q(){console.log(`Dataset changed to: ${e.selectedDataset}`),u.addNotification({message:`Switched to ${e.selectedDataset} dataset. Load data to see changes.`,type:"info"})}function X($){u.addNotification({message:`Selected sample: digit ${$.label}`,type:"info"})}function O(){if(e.trainData.length!==0){a.value=[];for(const $ of w){const k=e.trainData.filter(V=>V.label===$);if(k.length>0){const V=Math.floor(Math.random()*k.length);a.value.push(k[V])}}Kt(()=>{A()})}}function A(){a.value.forEach(($,k)=>{const V=r.value[k];if(!V)return;const st=V.getContext("2d");if(!st)return;const it=st.createImageData(28,28);for(let nt=0;nt<784;nt++){const ft=Math.floor($.features[nt]*255),vt=nt*4;it.data[vt]=ft,it.data[vt+1]=ft,it.data[vt+2]=ft,it.data[vt+3]=255}st.putImageData(it,0,0)})}return dt(()=>e.trainData,O,{deep:!0}),Yt(()=>{e.trainData.length>0&&O()}),($,k)=>(b(),C("div",Ri,[t("div",Ui,[k[4]||(k[4]=t("h3",{class:"section-title"},"Dataset Selection",-1)),t("div",Ei,[k[1]||(k[1]=t("label",{class:"selector-label"},"Choose Dataset:",-1)),Ft(t("select",{"onUpdate:modelValue":k[0]||(k[0]=V=>l(e).selectedDataset=V),onChange:Q,class:"dataset-select",disabled:s.value},[(b(!0),C(bt,null,wt(l(e).availableDatasets,(V,st)=>(b(),C("option",{key:st,value:st},n(V.description),9,Hi))),128))],40,qi),[[Vt,l(e).selectedDataset]])]),l(e).apiConnected?(b(),C("div",Vi,k[2]||(k[2]=[t("div",{class:"status-indicator connected"},[t("div",{class:"status-dot"}),t("span",null,"API Connected - Real Datasets Available")],-1)]))):(b(),C("div",Bi,k[3]||(k[3]=[t("div",{class:"status-indicator disconnected"},[t("div",{class:"status-dot"}),t("span",null,"API Offline - Using Synthetic Data")],-1)])))]),t("div",Oi,[k[12]||(k[12]=t("h3",{class:"section-title"},"Dataset",-1)),l(e).datasetInfo.trainSize>0?(b(),C("div",Gi,[t("div",Qi,[t("div",Ji,n(l(e).datasetInfo.trainSize),1),k[5]||(k[5]=t("div",{class:"stat-label"},"Training Samples",-1))]),t("div",Xi,[t("div",ji,n(l(e).datasetInfo.testSize),1),k[6]||(k[6]=t("div",{class:"stat-label"},"Test Samples",-1))]),t("div",Ki,[t("div",Yi,n(l(e).datasetInfo.numFeatures),1),k[7]||(k[7]=t("div",{class:"stat-label"},"Features",-1))])])):B("",!0),t("div",Zi,[t("button",{onClick:_,class:"action-btn primary",disabled:s.value},[mt(l(ve),{class:"btn-icon"}),k[8]||(k[8]=lt(" Quick Demo (200 samples) "))],8,to),t("button",{onClick:W,class:"action-btn",disabled:s.value},[mt(l(be),{class:"btn-icon"}),k[9]||(k[9]=lt(" Small Dataset (1K samples) "))],8,eo),t("button",{onClick:F,class:"action-btn",disabled:s.value},[mt(l(de),{class:"btn-icon"}),k[10]||(k[10]=lt(" Medium Dataset (5K samples) "))],8,so)]),s.value?(b(),C("div",ao,k[11]||(k[11]=[t("div",{class:"loading-spinner"},null,-1),t("span",null,"Loading dataset...",-1)]))):B("",!0)]),l(e).datasetInfo.trainSize>0?(b(),C("div",no,[k[13]||(k[13]=t("h3",{class:"section-title"},"Class Distribution",-1)),t("div",io,[(b(),C(bt,null,wt(w,V=>t("div",{key:V,class:"class-bar-container"},[t("span",oo,n(V),1),t("div",lo,[t("div",{class:"class-bar",style:At({width:`${E(V)}%`,backgroundColor:T(V)})},null,4),t("span",ro,n(z(V)),1)])])),64))])])):B("",!0),l(e).datasetInfo.trainSize>0?(b(),C("div",co,[k[15]||(k[15]=t("h3",{class:"section-title"},"Sample Visualization",-1)),t("div",uo,[(b(!0),C(bt,null,wt(a.value,(V,st)=>(b(),C("div",{key:st,class:"sample-container",onClick:it=>X(V)},[t("canvas",{ref_for:!0,ref:it=>{it&&(r.value[st]=it)},class:"sample-canvas",width:"28",height:"28"},null,512),t("span",ho,n(V.label),1)],8,vo))),128))]),t("button",{onClick:O,class:"refresh-btn"},[mt(l(Se),{class:"btn-icon"}),k[14]||(k[14]=lt(" Refresh Samples "))])])):B("",!0)]))}});const po=Et(go,[["__scopeId","data-v-6c752c64"]]),mo={class:"mnist-network-config"},fo={class:"config-section"},_o=["value"],yo={class:"config-description"},bo={class:"config-section"},wo=["value"],$o={class:"config-description"},Co={class:"config-section"},Mo={class:"ternary-controls"},So={class:"toggle-group"},To={class:"toggle-label"},xo=["checked"],ko={key:0,class:"ternary-config"},Io={class:"sparsity-control"},Ao={class:"sparsity-input-group"},zo=["value"],Do={class:"sparsity-value"},No={class:"ternary-actions"},Po=["disabled"],Fo=["disabled"],Wo=["disabled"],Lo={key:0,class:"ternary-stats"},Ro={class:"stats-grid"},Uo={class:"stat-item"},Eo={class:"stat-value"},qo={class:"stat-item"},Ho={class:"stat-value"},Vo={class:"stat-item"},Bo={class:"stat-value"},Oo={class:"stats-info"},Go={class:"config-description"},Qo=Ut({__name:"MNISTNetworkConfig",props:{similarityMetric:{},activationFunction:{}},emits:["update-similarity","update-activation","initialize-ternary","quantize-weights","refresh-stats"],setup(g){const e=Bt();function u(a){switch(a){case"dotProduct":return"Linear similarity measure";case"euclidean":return"Distance-based similarity";case"yatProduct":return"Custom normalized similarity";case"cosine":return"Angular similarity measure";case"manhattan":return"Manhattan distance metric";case"rbf":return"Radial basis function";default:return"Unknown metric"}}function s(a){switch(a){case"none":return"No activation function";case"softmax":return"Probabilistic output";case"softermax":return"Soft probabilistic output";case"sigmoid":return"S-curve activation";case"relu":return"Rectified linear unit";case"gelu":return"Gaussian error linear unit";default:return"Unknown activation"}}return(a,r)=>(b(),C("div",mo,[t("div",fo,[r[8]||(r[8]=t("h4",{class:"config-title"},"Similarity Metric",-1)),t("select",{value:a.similarityMetric,onChange:r[0]||(r[0]=w=>a.$emit("update-similarity",w.target.value)),class:"config-select"},r[7]||(r[7]=[ae('<option value="dotProduct" data-v-efcc9acf>Dot Product</option><option value="euclidean" data-v-efcc9acf>Euclidean Distance</option><option value="yatProduct" data-v-efcc9acf>YAT Product</option><option value="cosine" data-v-efcc9acf>Cosine Similarity</option><option value="manhattan" data-v-efcc9acf>Manhattan Distance</option><option value="rbf" data-v-efcc9acf>RBF Kernel</option>',6)]),40,_o),t("p",yo,n(u(a.similarityMetric)),1)]),t("div",bo,[r[10]||(r[10]=t("h4",{class:"config-title"},"Activation Function",-1)),t("select",{value:a.activationFunction,onChange:r[1]||(r[1]=w=>a.$emit("update-activation",w.target.value)),class:"config-select"},r[9]||(r[9]=[ae('<option value="none" data-v-efcc9acf>None</option><option value="softmax" data-v-efcc9acf>Softmax</option><option value="softermax" data-v-efcc9acf>Softermax</option><option value="sigmoid" data-v-efcc9acf>Sigmoid</option><option value="relu" data-v-efcc9acf>ReLU</option><option value="gelu" data-v-efcc9acf>GELU</option>',6)]),40,wo),t("p",$o,n(s(a.activationFunction)),1)]),t("div",Co,[r[18]||(r[18]=t("h4",{class:"config-title"},"Weight Quantization",-1)),t("div",Mo,[t("div",So,[t("label",To,[t("input",{type:"checkbox",checked:l(e).useTernaryWeights,onChange:r[2]||(r[2]=w=>l(e).toggleTernaryWeights()),class:"toggle-checkbox"},null,40,xo),r[11]||(r[11]=t("span",{class:"toggle-slider"},null,-1)),r[12]||(r[12]=t("span",{class:"toggle-text"},"Ternary Weights (-1, 0, 1)",-1))])]),l(e).useTernaryWeights?(b(),C("div",ko,[t("div",Io,[r[13]||(r[13]=t("label",{class:"sparsity-label"},"Sparsity Ratio:",-1)),t("div",Ao,[t("input",{type:"range",value:l(e).ternarySparsityRatio,onInput:r[3]||(r[3]=w=>l(e).setTernarySparsity(parseFloat(w.target.value))),min:"0",max:"0.9",step:"0.1",class:"sparsity-slider"},null,40,zo),t("span",Do,n((l(e).ternarySparsityRatio*100).toFixed(0))+"%",1)])]),t("div",No,[t("button",{onClick:r[4]||(r[4]=w=>a.$emit("initialize-ternary")),class:"ternary-btn init-btn",disabled:!l(e).apiConnected,title:"Initialize network with ternary weights"}," 🔧 Initialize ",8,Po),t("button",{onClick:r[5]||(r[5]=w=>a.$emit("quantize-weights")),class:"ternary-btn quantize-btn",disabled:!l(e).apiConnected,title:"Quantize current weights to ternary values"}," ⚡ Quantize ",8,Fo),t("button",{onClick:r[6]||(r[6]=w=>a.$emit("refresh-stats")),class:"ternary-btn stats-btn",disabled:!l(e).apiConnected,title:"Refresh ternary weight statistics"}," 📊 Stats ",8,Wo)]),l(e).ternaryStats?(b(),C("div",Lo,[r[17]||(r[17]=t("div",{class:"stats-header"},"Weight Distribution:",-1)),t("div",Ro,[t("div",Uo,[r[14]||(r[14]=t("span",{class:"stat-label"},"-1:",-1)),t("span",Eo,n((l(e).ternaryStats.overall_distribution.negative_one_ratio*100).toFixed(1))+"%",1)]),t("div",qo,[r[15]||(r[15]=t("span",{class:"stat-label"},"0:",-1)),t("span",Ho,n((l(e).ternaryStats.overall_distribution.zero_ratio*100).toFixed(1))+"%",1)]),t("div",Vo,[r[16]||(r[16]=t("span",{class:"stat-label"},"+1:",-1)),t("span",Bo,n((l(e).ternaryStats.overall_distribution.positive_one_ratio*100).toFixed(1))+"%",1)])]),t("div",Oo,[t("span",{class:q(["info-text",{valid:l(e).ternaryStats.is_ternary}])},n(l(e).ternaryStats.is_ternary?"✅ Truly Ternary":"⚠️ Not Ternary"),3)])])):B("",!0)])):B("",!0)]),t("p",Go,n(l(e).useTernaryWeights?"Weights constrained to {-1, 0, 1} for efficiency":"Standard continuous weights"),1)])]))}});const Jo=Et(Qo,[["__scopeId","data-v-efcc9acf"]]),Xo={class:"mnist-training-panel"},jo={class:"training-status-header"},Ko={class:"status-indicator"},Yo={class:"status-text"},Zo={key:0,class:"live-indicator"},tl={class:"training-metrics-header"},el={key:0,class:"training-timer"},sl={key:1,class:"training-speed"},al={class:"speed-value"},nl={class:"training-controls"},il={class:"control-grid"},ol={class:"control-group"},ll={class:"input-with-presets"},rl=["disabled"],cl={class:"preset-buttons"},ul=["disabled"],dl=["disabled"],vl=["disabled"],hl={class:"control-group"},gl=["disabled"],pl={class:"control-group"},ml={class:"input-with-slider"},fl=["disabled"],_l=["disabled"],yl={class:"control-group"},bl={class:"speed-control"},wl={class:"speed-display"},$l={class:"speed-value"},Cl={class:"training-actions"},Ml={class:"primary-actions"},Sl=["disabled"],Tl=["disabled"],xl=["disabled"],kl={class:"secondary-actions"},Il=["disabled"],Al=["disabled"],zl=["disabled"],Dl={key:0,class:"training-progress"},Nl={class:"progress-overview"},Pl={class:"progress-stats-grid"},Fl={class:"stat-card primary"},Wl={class:"stat-info"},Ll={class:"stat-value"},Rl={class:"stat-card"},Ul={class:"stat-info"},El={key:0,class:"stat-change"},ql={key:1,class:"stat-trend"},Hl={class:"mini-chart"},Vl={width:"60",height:"20",class:"loss-sparkline"},Bl=["points"],Ol={class:"stat-card"},Gl={class:"stat-info"},Ql={class:"stat-value accuracy"},Jl={key:0,class:"stat-trend"},Xl={class:"mini-chart"},jl={width:"60",height:"20",class:"accuracy-sparkline"},Kl=["points"],Yl={key:0,class:"stat-card"},Zl={class:"stat-info"},tr={class:"stat-value accuracy"},er={class:"progress-bar-container"},sr={class:"progress-bar-wrapper"},ar={class:"progress-bar"},nr={key:0,class:"progress-segments"},ir={class:"progress-labels"},or={class:"progress-text"},lr={key:0,class:"eta-text"},rr={key:0,class:"batch-metrics"},cr={class:"subsection-title"},ur={key:0,class:"live-pulse"},dr={class:"metrics-grid"},vr={class:"metric-header"},hr={class:"metric-value"},gr={class:"metric-details"},pr={key:0,class:"update-indicator"},mr={class:"metric-header"},fr={class:"metric-details"},_r={key:0},yr={key:1,class:"trend-sparkline"},br={width:"40",height:"16",class:"mini-sparkline"},wr=["points"],$r={class:"metric-header"},Cr={class:"metric-value accuracy"},Mr={class:"metric-details"},Sr={key:0},Tr={key:1,class:"trend-sparkline"},xr={width:"40",height:"16",class:"mini-sparkline"},kr=["points"],Ir={class:"metric-card"},Ar={class:"metric-header"},zr={class:"metric-value"},Dr={class:"metric-details"},Nr={key:1,class:"neuron-updates"},Pr={class:"neuron-grid"},Fr={class:"neuron-label"},Wr={class:"neuron-metrics"},Lr={class:"metric"},Rr={class:"metric-value"},Ur={class:"metric"},Er={class:"metric-value"},ze=50,qr=Ut({__name:"MNISTTrainingPanel",setup(g){const e=Bt(),u=Me(),s=f(!1),a=f(null),r=f(0),w=f(0),M=f([]),z=f(!1);let E=null;const T=f([]),_=f([]),W=f({learningRate:.01,epochs:50,batchSize:32,speed:1}),F=K(()=>!e.isTraining),Q=K(()=>e.optimizationHistory.totalSteps===0?0:e.optimizationHistory.currentStep/e.optimizationHistory.totalSteps*100),X=K(()=>e.isTraining?s.value?"status-paused":"status-running":"status-idle"),O=K(()=>e.isTraining?s.value?"Paused":"Training Active":"Ready to Train"),A=K(()=>{if(!a.value)return"00:00";const D=s.value?r.value:Date.now()-a.value-r.value,p=Math.floor(D/1e3)%60;return`${Math.floor(D/6e4).toString().padStart(2,"0")}:${p.toString().padStart(2,"0")}`}),$=K(()=>{if(!a.value||e.optimizationHistory.currentStep===0)return null;const D=Date.now()-a.value-r.value,p=e.optimizationHistory.currentStep/e.optimizationHistory.totalSteps,d=D/p-D;return d<6e4?`${Math.ceil(d/1e3)}s`:`${Math.ceil(d/6e4)}m`}),k=K(()=>{const D=e.currentLoss,p=w.value;return D-p}),V=K(()=>{const D=k.value;return D<0?"improving":D>0?"worsening":"stable"}),st=K(()=>e.isTraining?s.value?"Resume Training":"Training...":e.neurons.length===0&&e.trainData.length===0?"Start Training (Auto-setup)":e.neurons.length===0?"Start Training (Init Network)":e.trainData.length===0?"Start Training (Load Data)":"Start Training"),it=K(()=>{const D=e.optimizationHistory.steps;return D.length===0?"0.0000":D[D.length-1].loss.toFixed(4)}),nt=K(()=>{const D=e.optimizationHistory.steps;return D.length===0?"0.0%":`${D[D.length-1].trainAccuracy.toFixed(1)}%`}),ft=K(()=>{if(T.value.length<2)return"";const D=Math.max(...T.value),p=Math.min(...T.value),d=D-p||1;return T.value.map((m,P)=>{const S=P/(T.value.length-1)*60,o=20-(m-p)/d*20;return`${S},${o}`}).join(" ")}),vt=K(()=>{if(_.value.length<2)return"";const D=Math.max(..._.value),p=Math.min(..._.value),d=D-p||1;return _.value.map((m,P)=>{const S=P/(_.value.length-1)*60,o=20-(m-p)/d*20;return`${S},${o}`}).join(" ")});async function kt(){if(console.log("🚀 Start Training clicked"),console.log("API Connected:",e.apiConnected),console.log("Use API Compute:",e.useApiCompute),console.log("Can train?",F.value),console.log("Neurons count:",e.neurons.length),console.log("Train data count:",e.trainData.length),console.log("Filtered train data count:",e.filteredTrainData.length),!e.apiConnected&&e.useApiCompute){console.log("Attempting to connect to API..."),u.addNotification({message:"Connecting to API...",type:"info"});try{await e.initializeApiConnection(),e.apiConnected?u.addNotification({message:"Successfully connected to API!",type:"success"}):u.addNotification({message:"API unavailable, using local computation",type:"warning"})}catch(D){console.error("Failed to connect to API:",D),u.addNotification({message:"API connection failed, using local computation",type:"warning"})}}if(e.neurons.length===0){console.log("No neurons found, initializing classifier..."),u.addNotification({message:"Initializing neural network...",type:"info"});try{await e.initializeClassifier(),u.addNotification({message:"Neural network initialized!",type:"success"})}catch(D){u.addNotification({message:`Failed to initialize classifier: ${D}`,type:"error"});return}}if(e.trainData.length===0){console.log("No training data found, loading dataset..."),u.addNotification({message:"Loading training dataset...",type:"info"});try{await e.loadDataset({train:1e3,test:200}),u.addNotification({message:`Loaded ${e.trainData.length} training samples!`,type:"success"})}catch(D){u.addNotification({message:`Failed to load dataset: ${D}`,type:"error"});return}}if(e.neurons.length===0){u.addNotification({message:"Cannot start training: failed to initialize neural network",type:"error"});return}if(e.trainData.length===0&&!e.apiConnected){u.addNotification({message:"Cannot start training: no training data available and API not connected",type:"error"});return}if(W.value.learningRate<=0){u.addNotification({message:"Learning rate must be greater than 0",type:"error"});return}if(W.value.epochs<=0){u.addNotification({message:"Number of epochs must be greater than 0",type:"error"});return}console.log("✅ Starting training with config:",W.value),console.log(`🔧 Training mode: ${e.apiConnected&&e.useApiCompute?"API (JAX)":"Local (JS)"}`),e.updateOptimizationConfig(W.value),a.value=Date.now(),s.value=!1,T.value=[],_.value=[],w.value=0,u.addNotification({message:`Training started with ${e.apiConnected&&e.useApiCompute?"JAX API acceleration":"local computation"}`,type:"success"});try{await e.runTraining(),u.addNotification({message:"Training completed successfully!",type:"success"}),await e.updateAccuracyMetrics()}catch(D){console.error("Training error:",D),u.addNotification({message:`Training failed: ${D}`,type:"error"})}finally{a.value=null,s.value=!1}}function zt(){e.stopTraining(),u.addNotification({message:"Training stopped",type:"info"})}function $t(){e.clearHistory(),e.initializeClassifier(),a.value=null,r.value=0,s.value=!1,M.value=[],T.value=[],_.value=[],w.value=0,u.addNotification({message:"Training reset and neurons reinitialized",type:"info"})}function ht(){e.updateOptimizationConfig({speed:W.value.speed})}function Ct(){s.value?(s.value=!1,e.resumeTraining(),a.value&&(r.value+=Date.now()-(r.value>0?r.value:a.value)),u.addNotification({message:"Training resumed",type:"info"})):(s.value=!0,e.pauseTraining(),r.value=Date.now(),u.addNotification({message:"Training paused",type:"info"}))}function Dt(){e.clearHistory(),T.value=[],_.value=[],w.value=0,u.addNotification({message:"Training history cleared",type:"info"})}async function ct(){W.value.epochs=10,W.value.speed=5,await kt()}function gt(D){if(D.length<2)return"";const p=Math.max(...D),d=Math.min(...D),m=p-d||1;return D.map((P,S)=>{const o=S/(D.length-1)*40,y=16-(P-d)/m*16;return`${o},${y}`}).join(" ")}function ot(){if(_.value.length<2)return 0;const D=_.value[_.value.length-1],p=_.value[_.value.length-2];return D-p}function xt(D){const p=D.weights,d=p.reduce((S,o)=>S+o,0)/p.length,m=Math.min(...p),P=Math.max(...p);return`${d.toFixed(3)} (${m.toFixed(2)}→${P.toFixed(2)})`}function Mt(D){const p=Math.abs(D.weights.reduce((m,P)=>m+Math.abs(P),0)),d=M.value.includes(D.id);return Math.min(1,p/100)*(d?1:.3)}function Nt(){if(_.value.length<2)return"—";const D=_.value[_.value.length-1],p=_.value[_.value.length-2];return D>p?"↗️":D<p?"↘️":"→"}function St(){if(_.value.length<2)return"";const D=_.value[_.value.length-1],p=_.value[_.value.length-2],d=D-p;return`${d>0?"+":""}${d.toFixed(1)}%`}function x(){if(!a.value||e.optimizationHistory.steps.length===0)return"0.0";const D=(Date.now()-a.value-r.value)/1e3;return(e.optimizationHistory.steps.length/D).toFixed(1)}function L(){a.value=Date.now(),r.value=0,s.value=!1,w.value=e.currentLoss}function ut(){a.value=null,r.value=0,s.value=!1,M.value=[]}function Tt(){const D=e.neurons.map(p=>p.id);console.log("🎨 Highlighting neurons:",D),M.value=D,E&&clearTimeout(E),E=setTimeout(()=>{console.log("⏰ Clearing neuron highlights"),M.value=[]},1e3)}return dt(()=>e.isTraining,D=>{D?(L(),s.value=!1):ut()}),dt(()=>e.neurons,(D,p)=>{console.log("👁️ Neurons updated:",D.length),e.isTraining&&(console.log("🔥 Highlighting updated neurons"),console.log(p),Tt(),w.value=e.currentLoss)},{deep:!0,immediate:!0}),dt(()=>e.currentBatch,D=>{console.log("📦 Current batch updated:",D.length),D.length>0&&e.isTraining&&Tt()},{immediate:!0}),dt(()=>e.optimizationHistory.steps,D=>{if(D.length>0){const p=D[D.length-1];T.value.push(p.loss),T.value.length>ze&&T.value.shift(),_.value.push(p.trainAccuracy),_.value.length>ze&&_.value.shift(),T.value.length>1&&(w.value=T.value[T.value.length-2]),z.value=!0,setTimeout(()=>{z.value=!1},1e3),console.log(`📊 Metrics updated - Loss: ${p.loss.toFixed(4)}, Accuracy: ${p.trainAccuracy.toFixed(1)}%`)}},{deep:!0,immediate:!0}),dt(W,D=>{(!e.isTraining||s.value)&&e.updateOptimizationConfig(D)},{deep:!0}),oe(()=>{E&&clearTimeout(E)}),(D,p)=>(b(),C("div",Xo,[t("div",jo,[t("div",Ko,[t("div",{class:q(["status-dot",X.value,{pulsing:l(e).isTraining&&!s.value}])},null,2),t("span",Yo,n(O.value),1),l(e).isTraining&&!s.value?(b(),C("div",Zo,p[8]||(p[8]=[t("div",{class:"pulse-ring"},null,-1),t("span",{class:"live-text"},"LIVE",-1)]))):B("",!0)]),t("div",tl,[a.value||r.value>0?(b(),C("div",el,[mt(l(ve),{class:"timer-icon"}),t("span",null,n(A.value),1)])):B("",!0),t("div",{class:q(["connection-status",{connected:l(e).apiConnected,local:!l(e).apiConnected}])},[p[9]||(p[9]=t("div",{class:"connection-dot"},null,-1)),t("span",null,n(l(e).apiConnected?"JAX API":"Local CPU"),1)],2),l(e).isTraining?(b(),C("div",sl,[p[10]||(p[10]=t("span",{class:"speed-label"},"Speed:",-1)),t("span",al,n(x()),1)])):B("",!0)])]),t("div",nl,[p[20]||(p[20]=t("h4",{class:"section-title"},"Training Configuration",-1)),t("div",il,[t("div",ol,[p[11]||(p[11]=t("label",{class:"control-label"},[lt(" Learning Rate "),t("span",{class:"control-tooltip",title:"Higher values = faster learning but less stable"},"ⓘ")],-1)),t("div",ll,[Ft(t("input",{"onUpdate:modelValue":p[0]||(p[0]=d=>W.value.learningRate=d),type:"number",step:"0.001",min:"0.001",max:"1",class:"control-input",disabled:l(e).isTraining&&!s.value},null,8,rl),[[ee,W.value.learningRate,void 0,{number:!0}]]),t("div",cl,[t("button",{onClick:p[1]||(p[1]=d=>W.value.learningRate=.001),class:"preset-btn",disabled:l(e).isTraining&&!s.value},"Slow",8,ul),t("button",{onClick:p[2]||(p[2]=d=>W.value.learningRate=.01),class:"preset-btn",disabled:l(e).isTraining&&!s.value},"Normal",8,dl),t("button",{onClick:p[3]||(p[3]=d=>W.value.learningRate=.1),class:"preset-btn",disabled:l(e).isTraining&&!s.value},"Fast",8,vl)])])]),t("div",hl,[p[12]||(p[12]=t("label",{class:"control-label"},[lt(" Epochs "),t("span",{class:"control-tooltip",title:"Number of complete passes through the dataset"},"ⓘ")],-1)),Ft(t("input",{"onUpdate:modelValue":p[4]||(p[4]=d=>W.value.epochs=d),type:"number",min:"1",max:"1000",class:"control-input",disabled:l(e).isTraining&&!s.value},null,8,gl),[[ee,W.value.epochs,void 0,{number:!0}]])]),t("div",pl,[p[13]||(p[13]=t("label",{class:"control-label"},[lt(" Batch Size "),t("span",{class:"control-tooltip",title:"Number of samples processed together"},"ⓘ")],-1)),t("div",ml,[Ft(t("input",{"onUpdate:modelValue":p[5]||(p[5]=d=>W.value.batchSize=d),type:"number",min:"1",max:"256",class:"control-input",disabled:l(e).isTraining&&!s.value},null,8,fl),[[ee,W.value.batchSize,void 0,{number:!0}]]),Ft(t("input",{"onUpdate:modelValue":p[6]||(p[6]=d=>W.value.batchSize=d),type:"range",min:"1",max:"256",class:"batch-slider",disabled:l(e).isTraining&&!s.value},null,8,_l),[[ee,W.value.batchSize,void 0,{number:!0}]])])]),t("div",yl,[p[15]||(p[15]=t("label",{class:"control-label"},[lt(" Animation Speed "),t("span",{class:"control-tooltip",title:"Controls visualization update rate"},"ⓘ")],-1)),t("div",bl,[Ft(t("input",{"onUpdate:modelValue":p[7]||(p[7]=d=>W.value.speed=d),type:"range",step:"0.1",min:"0.1",max:"10",class:"speed-slider",onInput:ht},null,544),[[ee,W.value.speed,void 0,{number:!0}]]),t("div",wl,[t("span",$l,n(W.value.speed.toFixed(1))+"x",1),p[14]||(p[14]=t("div",{class:"speed-labels"},[t("span",null,"Slow"),t("span",null,"Normal"),t("span",null,"Fast")],-1))])])])]),t("div",Cl,[t("div",Ml,[t("button",{onClick:kt,disabled:!F.value||l(e).isTraining&&!s.value,class:"action-btn primary large"},[mt(l(we),{class:"btn-icon"}),lt(" "+n(st.value),1)],8,Sl),t("button",{onClick:Ct,disabled:!l(e).isTraining,class:"action-btn secondary"},[(b(),Wt(Ce(s.value?l(Fe):l(We)),{class:"btn-icon"})),lt(" "+n(s.value?"Resume":"Pause"),1)],8,Tl),t("button",{onClick:zt,disabled:!l(e).isTraining,class:"action-btn danger"},[mt(l(Le),{class:"btn-icon"}),p[16]||(p[16]=lt(" Stop "))],8,xl)]),t("div",kl,[t("button",{onClick:$t,disabled:l(e).isTraining&&!s.value,class:"action-btn outline"},[mt(l(Se),{class:"btn-icon"}),p[17]||(p[17]=lt(" Reset All "))],8,Il),t("button",{onClick:Dt,disabled:l(e).isTraining&&!s.value,class:"action-btn outline"},[mt(l(Re),{class:"btn-icon"}),p[18]||(p[18]=lt(" Clear History "))],8,Al),t("button",{onClick:ct,disabled:!F.value||l(e).isTraining,class:"action-btn outline quick-train"},[mt(l(ve),{class:"btn-icon"}),p[19]||(p[19]=lt(" Quick Train (10 epochs) "))],8,zl)])])]),l(e).optimizationHistory.steps.length>0?(b(),C("div",Dl,[p[37]||(p[37]=t("h4",{class:"section-title"},"Real-time Training Progress",-1)),t("div",Nl,[t("div",Pl,[t("div",Fl,[p[22]||(p[22]=t("div",{class:"stat-icon"},"📈",-1)),t("div",Wl,[p[21]||(p[21]=t("span",{class:"stat-label"},"Epoch",-1)),t("span",Ll,n(l(e).optimizationHistory.currentStep)+" / "+n(l(e).optimizationHistory.totalSteps),1)])]),t("div",Rl,[p[24]||(p[24]=t("div",{class:"stat-icon"},"📉",-1)),t("div",Ul,[p[23]||(p[23]=t("span",{class:"stat-label"},"Loss",-1)),t("span",{class:q(["stat-value",V.value])},n(it.value),3),k.value!==0?(b(),C("span",El,n(k.value>0?"+":"")+n(k.value.toFixed(4)),1)):B("",!0),T.value.length>1?(b(),C("div",ql,[t("div",Hl,[(b(),C("svg",Vl,[t("polyline",{points:ft.value,fill:"none",stroke:"rgb(var(--color-error))","stroke-width":"1.5"},null,8,Bl)]))])])):B("",!0)])]),t("div",Ol,[p[26]||(p[26]=t("div",{class:"stat-icon"},"🎯",-1)),t("div",Gl,[p[25]||(p[25]=t("span",{class:"stat-label"},"Train Accuracy",-1)),t("span",Ql,n(nt.value),1),_.value.length>1?(b(),C("div",Jl,[t("div",Xl,[(b(),C("svg",jl,[t("polyline",{points:vt.value,fill:"none",stroke:"rgb(var(--color-success))","stroke-width":"1.5"},null,8,Kl)]))])])):B("",!0)])]),l(e).testAccuracy>0?(b(),C("div",Yl,[p[28]||(p[28]=t("div",{class:"stat-icon"},"✅",-1)),t("div",Zl,[p[27]||(p[27]=t("span",{class:"stat-label"},"Test Accuracy",-1)),t("span",tr,n(l(e).testAccuracy.toFixed(1))+"%",1)])])):B("",!0)]),t("div",er,[t("div",sr,[t("div",ar,[t("div",{class:"progress-fill",style:At({width:`${Q.value}%`})},null,4),l(e).optimizationHistory.totalSteps>0?(b(),C("div",nr,[(b(!0),C(bt,null,wt(Math.min(l(e).optimizationHistory.totalSteps,20),d=>(b(),C("div",{key:d,class:q(["progress-segment",{completed:d<=l(e).optimizationHistory.currentStep}])},null,2))),128))])):B("",!0)]),t("div",ir,[t("span",or,n(Q.value.toFixed(1))+"%",1),$.value?(b(),C("span",lr,"ETA: "+n($.value),1)):B("",!0)])])])]),l(e).isTraining&&l(e).optimizationHistory.steps.length>0?(b(),C("div",rr,[t("h5",cr,[p[29]||(p[29]=lt(" Live Batch Metrics ")),l(e).isTraining&&!s.value?(b(),C("div",ur)):B("",!0)]),t("div",dr,[t("div",{class:q(["metric-card",{updating:z.value}])},[t("div",vr,[p[30]||(p[30]=t("span",{class:"metric-title"},"Current Batch",-1)),t("span",hr,n(l(e).currentBatch.length)+" samples",1)]),t("div",gr,[t("span",null,"Step "+n(l(e).optimizationHistory.steps.length),1),z.value?(b(),C("div",pr,"📊")):B("",!0)])],2),t("div",{class:q(["metric-card",{improving:k.value<0,degrading:k.value>0}])},[t("div",mr,[p[31]||(p[31]=t("span",{class:"metric-title"},"Loss Trend",-1)),t("span",{class:q(["metric-value",V.value])},n(T.value.length>1?k.value>0?"↗️":"↘️":"—"),3)]),t("div",fr,[T.value.length>1?(b(),C("span",_r,n(Math.abs(k.value*100).toFixed(2))+"% change ",1)):B("",!0),T.value.length>5?(b(),C("div",yr,[(b(),C("svg",br,[t("polyline",{points:gt(T.value.slice(-10)),fill:"none",stroke:"currentColor","stroke-width":"1"},null,8,wr)]))])):B("",!0)])],2),t("div",{class:q(["metric-card",{improving:ot()>0,degrading:ot()<0}])},[t("div",$r,[p[32]||(p[32]=t("span",{class:"metric-title"},"Accuracy Trend",-1)),t("span",Cr,n(_.value.length>1?Nt():"—"),1)]),t("div",Mr,[_.value.length>1?(b(),C("span",Sr,n(St()),1)):B("",!0),_.value.length>5?(b(),C("div",Tr,[(b(),C("svg",xr,[t("polyline",{points:gt(_.value.slice(-10)),fill:"none",stroke:"currentColor","stroke-width":"1"},null,8,kr)]))])):B("",!0)])],2),t("div",Ir,[t("div",Ar,[p[33]||(p[33]=t("span",{class:"metric-title"},"Training Speed",-1)),t("span",zr,n(x()),1)]),t("div",Dr,[t("span",null,n(l(e).apiConnected?"JAX accelerated":"CPU compute"),1),t("div",{class:q(["performance-indicator",{high:l(e).apiConnected,standard:!l(e).apiConnected}])},n(l(e).apiConnected?"🚀":"💻"),3)])])])])):B("",!0),l(e).currentBatch.length>0?(b(),C("div",Nr,[p[36]||(p[36]=t("h5",{class:"subsection-title"},"Live Neuron Updates",-1)),t("div",Pr,[(b(!0),C(bt,null,wt(l(e).neurons,(d,m)=>(b(),C("div",{key:d.id,class:q(["neuron-update-card",{active:M.value.includes(d.id)}])},[t("div",Fr,n(d.label||`Neuron ${m}`),1),t("div",Wr,[t("div",Lr,[p[34]||(p[34]=t("span",{class:"metric-label"},"Weights:",-1)),t("span",Rr,n(xt(d)),1)]),t("div",Ur,[p[35]||(p[35]=t("span",{class:"metric-label"},"Bias:",-1)),t("span",Er,n(d.bias.toFixed(3)),1)])]),t("div",{class:"neuron-activity-indicator",style:At({backgroundColor:d.color,opacity:Mt(d)})},null,4)],2))),128))])])):B("",!0)])):B("",!0)]))}});const Hr=Et(qr,[["__scopeId","data-v-0c69ed73"]]),Vr={class:"mnist-metrics-panel"},Br={class:"metrics-header"},Or={class:"header-section"},Gr={class:"live-status-container"},Qr={class:"status-text"},Jr={key:0,class:"last-update"},Xr={key:0,class:"live-training-indicator"},jr={class:"live-stats"},Kr={class:"performance-icon"},Yr={class:"performance-text"},Zr={class:"header-controls"},tc=["disabled"],ec={class:"auto-icon"},sc={class:"view-selector"},ac=["onClick","title"],nc={class:"metrics-content"},ic={key:0,class:"overview-section"},oc={class:"metrics-grid"},lc={class:"metric-card training-progress"},rc={class:"card-header"},cc={class:"progress-content"},uc={class:"progress-stats"},dc={class:"stat-item"},vc={class:"stat-value"},hc={class:"stat-item"},gc={class:"stat-value loss"},pc={class:"stat-item"},mc={class:"stat-value"},fc={class:"progress-bar-container"},_c={class:"progress-bar"},yc={class:"progress-text"},bc={class:"metric-card accuracy-metrics"},wc={class:"card-header"},$c={class:"accuracy-content"},Cc={class:"accuracy-item"},Mc={class:"accuracy-value train"},Sc={class:"accuracy-bar"},Tc={class:"accuracy-item"},xc={class:"accuracy-value test"},kc={class:"accuracy-bar"},Ic={class:"accuracy-gap"},Ac={class:"metric-card weight-stats"},zc={class:"weight-content"},Dc={class:"weight-summary"},Nc={class:"summary-item"},Pc={class:"summary-value"},Fc={class:"summary-item"},Wc={class:"summary-value"},Lc={class:"summary-item"},Rc={class:"summary-value"},Uc={class:"weight-distribution"},Ec={class:"metric-card dataset-info"},qc={class:"card-header"},Hc={class:"dataset-status"},Vc={class:"dataset-content"},Bc={class:"dataset-stats"},Oc={class:"dataset-item"},Gc={class:"dataset-value"},Qc={class:"dataset-item"},Jc={class:"dataset-value"},Xc={class:"dataset-item"},jc={class:"dataset-value"},Kc={class:"dataset-item"},Yc={class:"dataset-value"},Zc={class:"class-distribution"},tu={class:"class-chips"},eu={key:1,class:"loss-section"},su={class:"chart-container"},au={class:"chart-header"},nu={class:"chart-controls"},iu={class:"loss-stats"},ou={class:"loss-stat"},lu={class:"stat-value"},ru={class:"loss-stat"},cu={class:"stat-value"},uu={class:"loss-stat"},du={key:2,class:"weights-section"},vu={class:"weights-analysis"},hu={class:"analysis-header"},gu={class:"analysis-controls"},pu={class:"neuron-weights-grid"},mu={class:"neuron-card-header"},fu={class:"neuron-label"},_u={class:"neuron-metric"},yu={class:"weight-mini-chart"},bu={class:"neuron-stats"},wu={class:"mini-stat"},$u={class:"mini-value"},Cu={class:"mini-stat"},Mu={class:"mini-value"},Su={class:"mini-stat"},Tu={class:"mini-value"},xu={key:3,class:"api-section"},ku={class:"api-metrics"},Iu={class:"api-header"},Au={class:"api-stats-grid"},zu={class:"api-stat-card"},Du={class:"api-stat-value"},Nu={class:"api-stat-card"},Pu={class:"api-stat-value"},Fu={class:"api-stat-card"},Wu={class:"api-stat-value"},Lu={class:"api-stat-card"},Ru={class:"api-stat-value"},Uu={class:"api-operations"},Eu={class:"operations-list"},qu={class:"operation-type"},Hu={class:"operation-time"},Vu={class:"operation-status"},Bu=Ut({__name:"MNISTMetricsPanel",setup(g){const e=Bt(),u=f("overview"),s=f(!0),a=f(!1),r=f(!1),w=f(null),M=f("recent"),z=f("norm"),E=f(null),T=f(null),_=f({}),W=f(0),F=f(0),Q=f(100),X=f(null),O=f([]),A=f(null),$=f([]),k=f(0),V=f(0),st=f(0),it=f(0),nt=f(0),ft=f(0),vt=f([]),kt=f(Date.now()),zt=[{id:"overview",label:"Overview",description:"General training metrics"},{id:"loss",label:"Loss",description:"Loss history and trends"},{id:"weights",label:"Weights",description:"Weight analysis by neuron"},{id:"api",label:"API",description:"API performance metrics"}],$t=K(()=>!e.isTraining||e.optimizationHistory.totalSteps===0?0:e.optimizationHistory.currentStep/e.optimizationHistory.totalSteps*100),ht=K(()=>{const S=e.trainAccuracy-ft.value;return S>1?"up":S<-1?"down":"stable"}),Ct=K(()=>Math.max(0,e.trainAccuracy-e.testAccuracy)),Dt=K(()=>$.value.length===0?0:Math.min(...$.value)),ct=K(()=>{if($.value.length<10)return"stable";const S=$.value.slice(-10),o=$.value.slice(-20,-10);if(o.length===0)return"stable";const y=S.reduce((Y,rt)=>Y+rt,0)/S.length,U=o.reduce((Y,rt)=>Y+rt,0)/o.length;return y<U*.95?"decreasing":y>U*1.05?"increasing":"stable"});function gt(S){const y=Date.now()-S;return y<1e3?"now":y<6e4?`${Math.floor(y/1e3)}s ago`:y<36e5?`${Math.floor(y/6e4)}m ago`:`${Math.floor(y/36e5)}h ago`}function ot(S,o=2){return S.toFixed(o)}function xt(S){const o=["#ff6b6b","#4ecdc4","#45b7d1","#96ceb4","#feca57","#ff9ff3","#54a0ff","#5f27cd","#00d2d3","#ff9f43"];return o[S%o.length]}async function Mt(){if(!a.value){a.value=!0,r.value=!1;try{if(e.apiConnected){const S=Date.now(),o=await Z.getTrainingMetrics();k.value=o.current_epoch,st.value=o.gradient_norm,await St();const y=Date.now()-S;W.value=y,O.value.unshift({type:"Metrics Refresh",timestamp:Date.now(),success:!0}),O.value.length>10&&(O.value=O.value.slice(0,10))}w.value=Date.now()}catch(S){console.error("Failed to refresh metrics:",S),r.value=!0,O.value.unshift({type:"Metrics Refresh",timestamp:Date.now(),success:!1})}finally{a.value=!1}}}function Nt(){s.value=!s.value}async function St(){try{if(e.apiConnected){const S=await Z.getModelWeights();it.value=S.weights.reduce((y,U)=>y+U.length,0)+S.biases.length;const o=S.weights.flat();V.value=Math.sqrt(o.reduce((y,U)=>y+U*U,0)),x(o)}else{const S=e.neurons.flatMap(o=>o.weights);it.value=S.length+e.neurons.length,V.value=Math.sqrt(S.reduce((o,y)=>o+y*y,0)),x(S)}}catch(S){console.warn("Failed to refresh weight stats:",S)}}function x(S){const o=T.value;if(!o)return;const y=o.getContext("2d");if(!y)return;y.clearRect(0,0,o.width,o.height);const U=20,Y=Math.min(...S),_t=(Math.max(...S)-Y)/U,tt=new Array(U).fill(0);for(const et of S){const pt=Math.min(U-1,Math.floor((et-Y)/_t));tt[pt]++}const yt=Math.max(...tt),at=o.width/U;y.fillStyle=xt(0);for(let et=0;et<U;et++){const pt=tt[et]/yt*o.height;y.fillRect(et*at,o.height-pt,at-1,pt)}}function L(){$.value=[],ut()}function ut(){const S=E.value;if(!S||$.value.length<2)return;const o=S.getContext("2d");if(!o)return;o.clearRect(0,0,S.width,S.height);let y=$.value;switch(M.value){case"recent":y=y.slice(-50);break;case"last100":y=y.slice(-100);break}if(y.length<2)return;const U=40,Y=S.width-2*U,rt=S.height-2*U,_t=Math.min(...y),tt=Math.max(...y),yt=tt-_t||1;o.strokeStyle="rgba(255, 255, 255, 0.1)",o.lineWidth=1;for(let at=0;at<=5;at++){const et=U+rt/5*at;o.beginPath(),o.moveTo(U,et),o.lineTo(U+Y,et),o.stroke()}for(let at=0;at<=10;at++){const et=U+Y/10*at;o.beginPath(),o.moveTo(et,U),o.lineTo(et,U+rt),o.stroke()}o.strokeStyle="#ff6b6b",o.lineWidth=2,o.beginPath(),y.forEach((at,et)=>{const pt=U+Y/(y.length-1)*et,Pt=U+rt-(at-_t)/yt*rt;et===0?o.moveTo(pt,Pt):o.lineTo(pt,Pt)}),o.stroke(),o.fillStyle="rgba(255, 255, 255, 0.7)",o.font="10px Arial",o.textAlign="right";for(let at=0;at<=5;at++){const et=tt-yt/5*at,pt=U+rt/5*at+3;o.fillText(et.toFixed(3),U-5,pt)}}function Tt(S){return Math.sqrt(S.weights.reduce((o,y)=>o+y*y,0))}function D(S){return S.weights.reduce((o,y)=>o+y,0)/S.weights.length}function p(S){const o=D(S),y=S.weights.reduce((U,Y)=>U+Math.pow(Y-o,2),0)/S.weights.length;return Math.sqrt(y)}function d(S,o){switch(o){case"norm":return Tt(S).toFixed(3);case"mean":return D(S).toFixed(3);case"std":return p(S).toFixed(3);case"range":const y=Math.min(...S.weights);return(Math.max(...S.weights)-y).toFixed(3);default:return"0.000"}}function m(S){const o=_.value[S.id];if(!o)return;const y=o.getContext("2d");if(!y)return;y.clearRect(0,0,o.width,o.height);const U=S.weights,Y=10,rt=Math.min(...U),tt=(Math.max(...U)-rt)/Y,yt=new Array(Y).fill(0);for(const pt of U){const Pt=Math.min(Y-1,Math.floor((pt-rt)/tt));yt[Pt]++}const at=Math.max(...yt),et=o.width/Y;y.fillStyle=xt(S.id);for(let pt=0;pt<Y;pt++){const Pt=yt[pt]/at*o.height;y.fillRect(pt*et,o.height-Pt,et-1,Pt)}}dt(()=>e.currentLoss,S=>{e.isTraining&&($.value.push(S),$.value.length>500&&($.value=$.value.slice(-500)),Kt(()=>{ut()}))}),dt(()=>e.isTraining,S=>{S&&(A.value=Date.now())}),dt(()=>e.neurons,()=>{St(),Kt(()=>{for(const S of e.neurons)m(S)})},{deep:!0}),dt(()=>u.value,()=>{Kt(()=>{if(u.value==="loss")ut();else if(u.value==="weights")for(const S of e.neurons)m(S)})}),dt(()=>e.optimizationHistory.steps.length,()=>{const S=Date.now();if(vt.value.push(S),vt.value.length>10&&(vt.value=vt.value.slice(-10)),vt.value.length>=2){const o=S-vt.value[0],y=vt.value.length-1;nt.value=y/(o/1e3)||0}kt.value=S});let P=null;return Yt(()=>{Mt(),St(),s.value&&(P=setInterval(()=>{s.value&&!a.value&&Mt()},5e3))}),oe(()=>{P&&clearInterval(P)}),(S,o)=>(b(),C("div",Vr,[t("div",Br,[t("div",Or,[o[4]||(o[4]=t("h3",null,"Training Metrics",-1)),t("div",Gr,[t("div",{class:q(["api-status",{connected:l(e).apiConnected,syncing:a.value,error:r.value}])},[t("div",{class:q(["status-dot",{pulsing:l(e).isTraining}])},null,2),t("span",Qr,n(l(e).apiConnected?"API Connected":"Local Mode"),1),w.value?(b(),C("span",Jr," Updated "+n(gt(w.value)),1)):B("",!0)],2),l(e).isTraining?(b(),C("div",Xr,[o[2]||(o[2]=t("div",{class:"live-pulse"},null,-1)),o[3]||(o[3]=t("span",{class:"live-text"},"LIVE",-1)),t("span",jr," Epoch "+n(k.value)+" • "+n(ot(nt.value,1))+"/s ",1)])):B("",!0),t("div",{class:q(["performance-indicator",{high:l(e).apiConnected&&l(e).useApiCompute,medium:l(e).apiConnected&&!l(e).useApiCompute,low:!l(e).apiConnected}])},[t("div",Kr,n(l(e).apiConnected?l(e).useApiCompute?"🚀":"⚡":"💻"),1),t("span",Yr,n(l(e).apiConnected?l(e).useApiCompute?"JAX GPU":"JAX CPU":"Local JS"),1)],2)])]),t("div",Zr,[t("button",{onClick:Mt,disabled:a.value,class:"refresh-btn",title:"Refresh metrics from API"},[t("div",{class:q(["refresh-icon",{spinning:a.value}])},"🔄",2)],8,tc),t("button",{onClick:Nt,class:q(["auto-refresh-btn",{active:s.value}]),title:"Toggle automatic refresh"},[t("div",ec,n(s.value?"🔄":"⏸️"),1)],2),t("div",sc,[(b(),C(bt,null,wt(zt,y=>t("button",{key:y.id,onClick:U=>u.value=y.id,class:q(["view-btn",{active:u.value===y.id}]),title:y.description},n(y.label),11,ac)),64))])])]),t("div",nc,[u.value==="overview"?(b(),C("div",ic,[t("div",oc,[t("div",lc,[t("div",rc,[o[5]||(o[5]=t("h4",null,"Training Progress",-1)),t("div",{class:q(["training-status",{active:l(e).isTraining}])},n(l(e).isTraining?"Training":"Idle"),3)]),t("div",cc,[t("div",uc,[t("div",dc,[o[6]||(o[6]=t("span",{class:"stat-label"},"Epoch:",-1)),t("span",vc,n(k.value),1)]),t("div",hc,[o[7]||(o[7]=t("span",{class:"stat-label"},"Loss:",-1)),t("span",gc,n(ot(l(e).currentLoss,4)),1)]),t("div",pc,[o[8]||(o[8]=t("span",{class:"stat-label"},"Learning Rate:",-1)),t("span",mc,n(l(e).optimizationHistory.config.learningRate),1)])]),t("div",fc,[o[9]||(o[9]=t("div",{class:"progress-label"},"Training Progress",-1)),t("div",_c,[t("div",{class:"progress-fill",style:At({width:`${$t.value}%`})},null,4)]),t("div",yc,n($t.value.toFixed(1))+"%",1)])])]),t("div",bc,[t("div",wc,[o[10]||(o[10]=t("h4",null,"Model Accuracy",-1)),t("div",{class:q(["accuracy-trend",ht.value])},n(ht.value==="up"?"📈":ht.value==="down"?"📉":"➡️"),3)]),t("div",$c,[t("div",Cc,[o[11]||(o[11]=t("div",{class:"accuracy-label"},"Train Accuracy",-1)),t("div",Mc,n(ot(l(e).trainAccuracy,1))+"%",1),t("div",Sc,[t("div",{class:"accuracy-fill train",style:At({width:`${l(e).trainAccuracy}%`})},null,4)])]),t("div",Tc,[o[12]||(o[12]=t("div",{class:"accuracy-label"},"Test Accuracy",-1)),t("div",xc,n(ot(l(e).testAccuracy,1))+"%",1),t("div",kc,[t("div",{class:"accuracy-fill test",style:At({width:`${l(e).testAccuracy}%`})},null,4)])]),t("div",Ic,[o[13]||(o[13]=t("span",{class:"gap-label"},"Overfitting Gap:",-1)),t("span",{class:q(["gap-value",{warning:Ct.value>10}])},n(ot(Ct.value,1))+"% ",3)])])]),t("div",Ac,[t("div",{class:"card-header"},[o[14]||(o[14]=t("h4",null,"Weight Statistics",-1)),t("button",{onClick:St,class:"mini-refresh-btn"},"🔄")]),t("div",zc,[t("div",Dc,[t("div",Nc,[o[15]||(o[15]=t("span",{class:"summary-label"},"Total Parameters:",-1)),t("span",Pc,n(it.value.toLocaleString()),1)]),t("div",Fc,[o[16]||(o[16]=t("span",{class:"summary-label"},"Weight Norm:",-1)),t("span",Wc,n(ot(V.value,3)),1)]),t("div",Lc,[o[17]||(o[17]=t("span",{class:"summary-label"},"Gradient Norm:",-1)),t("span",Rc,n(ot(st.value,3)),1)])]),t("div",Uc,[t("canvas",{ref_key:"weightDistributionCanvas",ref:T,class:"distribution-canvas",width:"200",height:"80"},null,512)])])]),t("div",Ec,[t("div",qc,[o[18]||(o[18]=t("h4",null,"Dataset Info",-1)),t("div",Hc,n(l(e).selectedDataset||"Local"),1)]),t("div",Vc,[t("div",Bc,[t("div",Oc,[o[19]||(o[19]=t("span",{class:"dataset-label"},"Training Samples:",-1)),t("span",Gc,n(l(e).datasetInfo.trainSize.toLocaleString()),1)]),t("div",Qc,[o[20]||(o[20]=t("span",{class:"dataset-label"},"Test Samples:",-1)),t("span",Jc,n(l(e).datasetInfo.testSize.toLocaleString()),1)]),t("div",Xc,[o[21]||(o[21]=t("span",{class:"dataset-label"},"Active Classes:",-1)),t("span",jc,n(l(e).activeClasses.length)+"/10",1)]),t("div",Kc,[o[22]||(o[22]=t("span",{class:"dataset-label"},"Features:",-1)),t("span",Yc,n(l(e).datasetInfo.numFeatures),1)])]),t("div",Zc,[o[23]||(o[23]=t("div",{class:"class-label"},"Active Classes:",-1)),t("div",tu,[(b(!0),C(bt,null,wt(l(e).activeClasses,y=>(b(),C("div",{key:y,class:"class-chip",style:At({backgroundColor:xt(y)})},n(y),5))),128))])])])])])])):u.value==="loss"?(b(),C("div",eu,[t("div",su,[t("div",au,[o[25]||(o[25]=t("h4",null,"Loss History",-1)),t("div",nu,[Ft(t("select",{"onUpdate:modelValue":o[0]||(o[0]=y=>M.value=y),class:"timeframe-select"},o[24]||(o[24]=[t("option",{value:"all"},"All Time",-1),t("option",{value:"recent"},"Recent (50 steps)",-1),t("option",{value:"last100"},"Last 100 steps",-1)]),512),[[Vt,M.value]]),t("button",{onClick:L,class:"clear-btn"},"Clear")])]),t("canvas",{ref_key:"lossChartCanvas",ref:E,class:"loss-chart",width:"800",height:"300"},null,512),t("div",iu,[t("div",ou,[o[26]||(o[26]=t("span",{class:"stat-label"},"Current Loss:",-1)),t("span",lu,n(ot(l(e).currentLoss,4)),1)]),t("div",ru,[o[27]||(o[27]=t("span",{class:"stat-label"},"Min Loss:",-1)),t("span",cu,n(ot(Dt.value,4)),1)]),t("div",uu,[o[28]||(o[28]=t("span",{class:"stat-label"},"Loss Trend:",-1)),t("span",{class:q(["stat-value",ct.value])},n(ct.value==="decreasing"?"Decreasing ↓":ct.value==="increasing"?"Increasing ↑":"Stable →"),3)])])])])):u.value==="weights"?(b(),C("div",du,[t("div",vu,[t("div",hu,[o[30]||(o[30]=t("h4",null,"Weight Analysis",-1)),t("div",gu,[Ft(t("select",{"onUpdate:modelValue":o[1]||(o[1]=y=>z.value=y),class:"metric-select"},o[29]||(o[29]=[t("option",{value:"norm"},"Weight Norm",-1),t("option",{value:"mean"},"Mean Weight",-1),t("option",{value:"std"},"Std Deviation",-1),t("option",{value:"range"},"Weight Range",-1)]),512),[[Vt,z.value]])])]),t("div",pu,[(b(!0),C(bt,null,wt(l(e).neurons,y=>(b(),C("div",{key:y.id,class:"neuron-weight-card"},[t("div",mu,[t("span",fu,"Class "+n(y.id),1),t("span",_u,n(d(y,z.value)),1)]),t("div",yu,[t("canvas",{ref_for:!0,ref:U=>{U&&(_.value[y.id]=U)},class:"mini-chart",width:"120",height:"60"},null,512)]),t("div",bu,[t("div",wu,[o[31]||(o[31]=t("span",{class:"mini-label"},"‖w‖:",-1)),t("span",$u,n(Tt(y).toFixed(3)),1)]),t("div",Cu,[o[32]||(o[32]=t("span",{class:"mini-label"},"μ:",-1)),t("span",Mu,n(D(y).toFixed(3)),1)]),t("div",Su,[o[33]||(o[33]=t("span",{class:"mini-label"},"σ:",-1)),t("span",Tu,n(p(y).toFixed(3)),1)])])]))),128))])])])):u.value==="api"?(b(),C("div",xu,[t("div",ku,[t("div",Iu,[o[34]||(o[34]=t("h4",null,"API Performance",-1)),t("div",{class:q(["api-status-indicator",{connected:l(e).apiConnected}])},n(l(e).apiConnected?"Connected":"Disconnected"),3)]),t("div",Au,[t("div",zu,[o[35]||(o[35]=t("div",{class:"api-stat-label"},"Response Time",-1)),t("div",Du,n(W.value)+"ms",1)]),t("div",Nu,[o[36]||(o[36]=t("div",{class:"api-stat-label"},"Requests/min",-1)),t("div",Pu,n(F.value),1)]),t("div",Fu,[o[37]||(o[37]=t("div",{class:"api-stat-label"},"Success Rate",-1)),t("div",Wu,n(Q.value)+"%",1)]),t("div",Lu,[o[38]||(o[38]=t("div",{class:"api-stat-label"},"Last Sync",-1)),t("div",Ru,n(X.value?gt(X.value):"Never"),1)])]),t("div",Uu,[o[39]||(o[39]=t("h5",null,"Recent Operations",-1)),t("div",Eu,[(b(!0),C(bt,null,wt(O.value,(y,U)=>(b(),C("div",{key:U,class:q(["operation-item",{success:y.success,error:!y.success}])},[t("span",qu,n(y.type),1),t("span",Hu,n(gt(y.timestamp)),1),t("span",Vu,n(y.success?"✓":"✗"),1)],2))),128))])])])])):B("",!0)])]))}});const Ou=Et(Bu,[["__scopeId","data-v-294e27a8"]]),Gu={class:"api-status-panel"},Qu={class:"status-header"},Ju={class:"status-text"},Xu={key:0,class:"uptime"},ju={class:"actions"},Ku=["disabled"],Yu={class:"btn-icon"},Zu={class:"metrics-grid"},td={class:"metric-value"},ed={class:"metric-trend"},sd={class:"metric-value"},ad={class:"metric-trend"},nd={class:"metric-card"},id={class:"metric-value"},od={class:"metric-trend"},ld={class:"metric-value"},rd={key:0,class:"metric-trend"},cd={class:"training-indicator"},ud={key:0,class:"training-metrics"},dd={class:"training-grid"},vd={class:"training-metric"},hd={class:"change"},gd={class:"training-metric"},pd={class:"value"},md={class:"training-metric"},fd={class:"value"},_d={class:"training-metric"},yd={class:"value"},bd={class:"operations-section"},wd={class:"operations-list"},$d={class:"operation-info"},Cd={class:"operation-name"},Md={class:"operation-time"},Sd={class:"operation-status"},Td={class:"status-icon"},xd={class:"duration"},kd={class:"model-state-section"},Id={class:"state-grid"},Ad={class:"state-item"},zd={class:"state-item"},Dd={class:"state-item"},Nd={class:"state-item"},Pd={class:"state-value"},Fd={key:1,class:"system-metrics"},Wd={class:"resource-bars"},Ld={class:"resource-bar"},Rd={class:"progress-bar"},Ud={class:"resource-value"},Ed={class:"resource-bar"},qd={class:"progress-bar"},Hd={class:"resource-value"},Vd=Ut({__name:"MNISTApiStatus",setup(g){const e=Bt(),u=f(!1),s=f(!1),a=f(!1),r=f(!0),w=f(null),M=f(0),z=f(0),E=f(0),T=f(100),_=f(0),W=f(0),F=f(0),Q=f(0),X=f(.01),O=f(0),A=f(0),$=f(0),k=f([]),V=f(null),st=f(!1),it=f(!1),nt=K(()=>({connected:e.apiConnected,connecting:u.value,disconnected:!e.apiConnected&&!u.value,error:s.value})),ft=K(()=>u.value?"Connecting...":e.apiConnected?"Connected":s.value?"Connection Error":"Disconnected"),vt=K(()=>{const x=e.currentLoss-A.value;return{improving:x<-.001,degrading:x>.001,stable:Math.abs(x)<=.001}}),kt=K(()=>{const x=e.trainAccuracy-$.value;return{improving:x>.1,degrading:x<-.1,stable:Math.abs(x)<=.1}});function zt(x){if(x<60)return`${x}s`;if(x<3600)return`${Math.floor(x/60)}m ${x%60}s`;const L=Math.floor(x/3600),ut=Math.floor(x%3600/60);return`${L}h ${ut}m`}function $t(x){return{"trend-up":x>0,"trend-down":x<0,"trend-stable":x===0}}function ht(x){return x===0?"→":x>0?`↗ +${x.toFixed(1)}`:`↘ ${x.toFixed(1)}`}function Ct(){const x=e.currentLoss-A.value;return Math.abs(x)<1e-4?"":x>0?`↗ +${x.toFixed(4)}`:`↘ ${x.toFixed(4)}`}function Dt(){const x=e.trainAccuracy-$.value;return Math.abs(x)<.1?"":x>0?`↗ +${x.toFixed(1)}%`:`↘ ${x.toFixed(1)}%`}function ct(x){return Date.now()-x<5e3}function gt(x){const L=Date.now()-x;return L<1e3?"now":L<6e4?`${Math.floor(L/1e3)}s ago`:L<36e5?`${Math.floor(L/6e4)}m ago`:`${Math.floor(L/36e5)}h ago`}async function ot(){a.value=!0;const x=Date.now();try{await Z.healthCheck();const L=Date.now()-x;Mt("Health Check",!0,L),z.value=L,s.value=!1}catch(L){const ut=Date.now()-x;Mt("Health Check",!1,ut),s.value=!0,console.error("Connection test failed:",L)}finally{a.value=!1}}function xt(){r.value=!r.value,console.log("Auto refresh",r.value?"enabled":"disabled")}function Mt(x,L,ut){k.value.unshift({operation:x,timestamp:Date.now(),success:L,duration:ut}),k.value.length>10&&(k.value=k.value.slice(0,10));const Tt=k.value.slice(0,20),D=Tt.filter(p=>p.success).length;T.value=D/Tt.length*100}dt(()=>e.apiConnected,x=>{x?(w.value=Date.now(),s.value=!1):w.value=null}),dt(()=>e.currentLoss,x=>{A.value=x}),dt(()=>e.trainAccuracy,x=>{$.value=x});let Nt=null,St=null;return Yt(()=>{Nt=setInterval(()=>{w.value&&(M.value=Math.floor((Date.now()-w.value)/1e3))},1e3),r.value&&(St=setInterval(async()=>{if(e.apiConnected&&r.value)try{st.value=e.neurons.length>0&&e.neurons[0].weights.length>0,it.value=!!e.selectedDataset}catch(x){console.warn("Failed to update metrics:",x)}},2e3)),e.apiConnected&&ot()}),oe(()=>{Nt&&clearInterval(Nt),St&&clearInterval(St)}),(x,L)=>(b(),C("div",Gu,[t("div",Qu,[t("div",{class:q(["connection-indicator",nt.value])},[t("div",{class:q(["status-dot",{pulsing:l(e).apiConnected&&u.value,error:!l(e).apiConnected&&s.value}])},null,2),t("span",Ju,n(ft.value),1),l(e).apiConnected?(b(),C("span",Xu,n(zt(M.value)),1)):B("",!0)],2),t("div",ju,[t("button",{onClick:ot,disabled:a.value,class:q(["test-btn",{testing:a.value}])},[t("div",{class:q(["btn-icon",{spinning:a.value}])},"🔄",2),lt(" "+n(a.value?"Testing...":"Test"),1)],10,Ku),t("button",{onClick:xt,class:q(["auto-refresh-btn",{active:r.value}])},[t("div",Yu,n(r.value?"⏸️":"▶️"),1),L[0]||(L[0]=lt(" Auto "))],2)])]),t("div",Zu,[t("div",{class:q(["metric-card",{warning:z.value>1e3,error:z.value>5e3}])},[L[1]||(L[1]=t("div",{class:"metric-label"},"Response Time",-1)),t("div",td,n(z.value)+"ms",1),t("div",ed,[t("span",{class:q($t(E.value))},n(ht(E.value)),3)])],2),t("div",{class:q(["metric-card",{warning:T.value<95,error:T.value<80}])},[L[2]||(L[2]=t("div",{class:"metric-label"},"Success Rate",-1)),t("div",sd,n(T.value.toFixed(1))+"%",1),t("div",ad,[t("span",{class:q($t(_.value))},n(ht(_.value)),3)])],2),t("div",nd,[L[3]||(L[3]=t("div",{class:"metric-label"},"Requests/min",-1)),t("div",id,n(W.value),1),t("div",od,[t("span",{class:q($t(F.value))},n(ht(F.value)),3)])]),t("div",{class:q(["metric-card",{active:l(e).isTraining}])},[L[4]||(L[4]=t("div",{class:"metric-label"},"Training Status",-1)),t("div",ld,n(l(e).isTraining?"Active":"Idle"),1),l(e).isTraining?(b(),C("div",rd,[t("span",cd,"Epoch "+n(Q.value),1)])):B("",!0)],2)]),l(e).isTraining?(b(),C("div",ud,[L[9]||(L[9]=t("h4",null,"Live Training Metrics",-1)),t("div",dd,[t("div",vd,[L[5]||(L[5]=t("span",{class:"label"},"Current Loss:",-1)),t("span",{class:q(["value",vt.value])},n(l(e).currentLoss.toFixed(4)),3),t("span",hd,n(Ct()),1)]),t("div",gd,[L[6]||(L[6]=t("span",{class:"label"},"Train Accuracy:",-1)),t("span",pd,n(l(e).trainAccuracy.toFixed(1))+"%",1),t("span",{class:q(["change",kt.value])},n(Dt()),3)]),t("div",md,[L[7]||(L[7]=t("span",{class:"label"},"Learning Rate:",-1)),t("span",fd,n(X.value.toFixed(4)),1)]),t("div",_d,[L[8]||(L[8]=t("span",{class:"label"},"Gradient Norm:",-1)),t("span",yd,n(O.value.toFixed(6)),1)])])])):B("",!0),t("div",bd,[L[10]||(L[10]=t("h4",null,"Recent Operations",-1)),t("div",wd,[(b(!0),C(bt,null,wt(k.value,(ut,Tt)=>(b(),C("div",{key:Tt,class:q(["operation-item",{success:ut.success,error:!ut.success,recent:ct(ut.timestamp)}])},[t("div",$d,[t("span",Cd,n(ut.operation),1),t("span",Md,n(gt(ut.timestamp)),1)]),t("div",Sd,[t("span",Td,n(ut.success?"✅":"❌"),1),t("span",xd,n(ut.duration)+"ms",1)])],2))),128))])]),t("div",kd,[L[15]||(L[15]=t("h4",null,"Model State",-1)),t("div",Id,[t("div",Ad,[L[11]||(L[11]=t("span",{class:"state-label"},"Weights Initialized:",-1)),t("span",{class:q(["state-value",{active:st.value}])},n(st.value?"Yes":"No"),3)]),t("div",zd,[L[12]||(L[12]=t("span",{class:"state-label"},"Ternary Mode:",-1)),t("span",{class:q(["state-value",{active:l(e).useTernaryWeights}])},n(l(e).useTernaryWeights?"Enabled":"Disabled"),3)]),t("div",Dd,[L[13]||(L[13]=t("span",{class:"state-label"},"Dataset Loaded:",-1)),t("span",{class:q(["state-value",{active:it.value}])},n(l(e).selectedDataset||"None"),3)]),t("div",Nd,[L[14]||(L[14]=t("span",{class:"state-label"},"Similarity Metric:",-1)),t("span",Pd,n(l(e).similarityMetric),1)])])]),V.value?(b(),C("div",Fd,[L[18]||(L[18]=t("h4",null,"System Resources",-1)),t("div",Wd,[t("div",Ld,[L[16]||(L[16]=t("div",{class:"resource-label"},"CPU Usage",-1)),t("div",Rd,[t("div",{class:"progress-fill",style:At({width:`${V.value.cpu}%`})},null,4)]),t("span",Ud,n(V.value.cpu)+"%",1)]),t("div",Ed,[L[17]||(L[17]=t("div",{class:"resource-label"},"Memory Usage",-1)),t("div",qd,[t("div",{class:"progress-fill",style:At({width:`${V.value.memory}%`})},null,4)]),t("span",Hd,n(V.value.memory)+"%",1)])])])):B("",!0)]))}});const Bd=Et(Vd,[["__scopeId","data-v-f8844232"]]),Od={class:"min-h-screen photoshop-workspace"},Gd={class:"workspace-main"},Qd={class:"workspace-container"},Jd={class:"visualization-area"},Xd={class:"visualization-container","data-tour":"mnist-canvas"},jd={key:0,class:"controls-toolbar-overlay"},Kd={class:"dataset-content"},Yd={class:"visualization-content"},Zd={class:"network-config-content"},tv={class:"training-content"},ev={class:"metrics-content"},sv={class:"api-status-content"},av={class:"panel-controls-sidebar","data-tour":"panel-controls"},nv={class:"sidebar-section"},iv={class:"panel-toggles"},ov=["onClick","title","data-tour"],lv={class:"toggle-label"},rv={class:"sidebar-section"},cv={class:"layout-controls"},uv=Ut({__name:"MnistClassifier",setup(g){const e=Bt(),u=Me(),s=f(null),a=Ue({dataset:!0,visualization:!0,networkConfig:!1,training:!1,metrics:!1,apiStatus:!1});Yt(async()=>{try{console.log("🚀 Initializing MNIST Classifier..."),await e.initializeApiConnection(),u.addNotification({message:e.apiConnected?"Connected to API - Real datasets available":"Using local computation - Synthetic data mode",type:e.apiConnected?"success":"info"}),console.log("✅ MNIST Classifier initialized successfully")}catch(A){console.error("❌ Failed to initialize MNIST Classifier:",A),u.addNotification({message:"Failed to initialize classifier. Check console for details.",type:"error"})}});function r(A){a[A]=!a[A],u.addNotification({message:`${w(A)} panel ${a[A]?"shown":"hidden"}`,type:"info"})}function w(A){return{dataset:"Dataset",visualization:"Visualization",networkConfig:"Network",training:"Training",metrics:"Metrics",apiStatus:"API Status"}[A]||A}function M(A){return{dataset:be,visualization:_e,networkConfig:Te,training:we,metrics:ye,apiStatus:de}[A]||de}function z(){e.reset();const A={...a};Object.keys(a).forEach($=>{a[$]=!1}),setTimeout(()=>{Object.assign(a,A)},100),u.addNotification({message:"MNIST classifier and panel layout have been reset",type:"info"})}function E(){Object.keys(a).forEach(A=>{a[A]=!1}),u.addNotification({message:"All panels hidden",type:"info"})}function T(){Object.keys(a).forEach(A=>{a[A]=!0}),u.addNotification({message:"All panels shown",type:"info"})}async function _(){try{u.addNotification({message:"Setting up quick demo with synthetic MNIST data...",type:"info"}),await e.quickTest(200),a.dataset=!0,a.visualization=!0,a.training=!0,a.metrics=!0,a.apiStatus=!0,u.addNotification({message:"Quick demo ready! You can now start training.",type:"success"})}catch(A){u.addNotification({message:`Failed to setup demo: ${A}`,type:"error"})}}function W(A){e.similarityMetric=A,u.addNotification({message:`Similarity metric changed to ${A}!`,type:"info"})}function F(A){e.activationFunction=A,u.addNotification({message:`Activation function changed to ${A}!`,type:"info"})}async function Q(){try{console.log("🔧 Initializing ternary weights..."),await e.initializeTernaryWeights(),u.addNotification({message:"Network initialized with ternary weights (-1, 0, 1)",type:"success"})}catch(A){console.error("❌ Failed to initialize ternary weights:",A),u.addNotification({message:"Failed to initialize ternary weights. Check API connection.",type:"error"})}}async function X(){try{console.log("⚡ Quantizing weights to ternary..."),await e.quantizeWeightsToTernary(),u.addNotification({message:"Current weights quantized to ternary values",type:"success"})}catch(A){console.error("❌ Failed to quantize weights:",A),u.addNotification({message:"Failed to quantize weights. Check API connection.",type:"error"})}}async function O(){try{console.log("📊 Refreshing ternary stats..."),await e.refreshTernaryStats(),u.addNotification({message:"Ternary weight statistics updated",type:"info"})}catch(A){console.error("❌ Failed to refresh ternary stats:",A),u.addNotification({message:"Could not refresh ternary statistics",type:"warning"})}}return(A,$)=>(b(),C("div",Od,[mt(Ee),t("main",Gd,[t("div",Qd,[$[6]||($[6]=t("div",{class:"text-center mb-4"},[t("h1",{class:"text-3xl font-bold text-theme-primary mb-2"},"MNIST Neural Network Classifier"),t("p",{class:"text-sm text-theme-secondary"},"N-dimensional classification with weight visualization")],-1)),t("div",Jd,[t("div",Xd,[mt(Ae,{ref_key:"mnistVisualization",ref:s},null,512),l(e).allClasses.length>0?(b(),C("div",jd,[mt(Li)])):B("",!0)])]),a.dataset?(b(),Wt(jt,{key:0,title:"Dataset & Loading",icon:l(be),"initial-position":{x:10,y:10},width:380,height:400,"z-index":150,onClose:$[0]||($[0]=k=>a.dataset=!1),"data-tour":"dataset-panel"},{default:Xt(()=>[t("div",Kd,[mt(po)])]),_:1},8,["icon"])):B("",!0),a.visualization?(b(),Wt(jt,{key:1,title:"Weight Visualization",icon:l(_e),"initial-position":{x:400,y:10},width:400,height:500,"z-index":150,onClose:$[1]||($[1]=k=>a.visualization=!1),"data-tour":"visualization-panel"},{default:Xt(()=>[t("div",Yd,[mt(Ae)])]),_:1},8,["icon"])):B("",!0),a.networkConfig?(b(),Wt(jt,{key:2,title:"Network Configuration",icon:l(Te),"initial-position":{x:810,y:10},width:380,height:450,"z-index":150,onClose:$[2]||($[2]=k=>a.networkConfig=!1),"data-tour":"network-config-panel"},{default:Xt(()=>[t("div",Zd,[mt(Jo,{"similarity-metric":l(e).similarityMetric,"activation-function":l(e).activationFunction,onUpdateSimilarity:W,onUpdateActivation:F,onInitializeTernary:Q,onQuantizeWeights:X,onRefreshStats:O},null,8,["similarity-metric","activation-function"])])]),_:1},8,["icon"])):B("",!0),a.training?(b(),Wt(jt,{key:3,title:"Training & Optimization",icon:l(we),"initial-position":{x:10,y:420},width:450,height:400,"z-index":150,onClose:$[3]||($[3]=k=>a.training=!1),"data-tour":"training-panel"},{default:Xt(()=>[t("div",tv,[mt(Hr)])]),_:1},8,["icon"])):B("",!0),a.metrics?(b(),Wt(jt,{key:4,title:"Metrics & Performance",icon:l(ye),"initial-position":{x:470,y:420},width:400,height:400,"z-index":150,onClose:$[4]||($[4]=k=>a.metrics=!1),"data-tour":"metrics-panel"},{default:Xt(()=>[t("div",ev,[mt(Ou)])]),_:1},8,["icon"])):B("",!0),a.apiStatus?(b(),Wt(jt,{key:5,title:"API Status",icon:l(de),"initial-position":{x:880,y:420},width:400,height:350,"z-index":150,onClose:$[5]||($[5]=k=>a.apiStatus=!1),"data-tour":"api-status-panel"},{default:Xt(()=>[t("div",sv,[mt(Bd)])]),_:1},8,["icon"])):B("",!0),t("div",av,[t("div",nv,[t("div",iv,[(b(!0),C(bt,null,wt(a,(k,V)=>(b(),C("button",{key:V,onClick:st=>r(V),class:q(["panel-toggle",{active:k}]),title:`Toggle ${w(V)} panel`,"data-tour":`toggle-${V}`},[(b(),Wt(Ce(M(V)),{class:"toggle-icon"})),t("span",lv,n(w(V)),1)],10,ov))),128))])]),t("div",rv,[t("div",cv,[t("button",{onClick:z,class:"layout-btn",title:"Reset Layout"},[mt(l(Se),{class:"btn-icon"})]),t("button",{onClick:E,class:"layout-btn",title:"Minimize All"},[mt(l(qe),{class:"btn-icon"})]),t("button",{onClick:T,class:"layout-btn",title:"Show All"},[mt(l(He),{class:"btn-icon"})]),t("button",{onClick:_,class:"layout-btn demo-btn",title:"Quick Demo"},[mt(l(ve),{class:"btn-icon"})])])])])])])]))}});const gv=Et(uv,[["__scopeId","data-v-ec531ef8"]]);export{gv as default};
